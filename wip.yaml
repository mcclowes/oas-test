openapi: 3.1.0
servers:
  - description: Production
    url: 'https://api.codat.io'
x-stoplight:
  id: tfrhp9p2h6on2
info:
  title: Accounting API
  version: 2.1.0
  contact:
    email: support@codat.io
    name: Codat
  description: |-
    A flexible API for pulling accounting data, normalized and aggregated from 20 accounting integrations.

    Standardize how you connect to your customersâ€™ accounting software. View, create, update, and delete data in the same way for all the leading accounting platforms.

    [Read more...](https://codat-docs.vercel.app/accounting-api/overview)
  termsOfService: 'https://www.codat.io/legals/'
tags:
  - name: Accounts
    description: Accounts
  - name: Account transactions
    description: Account transactions
  - name: Bank accounts
    description: Bank accounts
  - name: Bank account transactions
    description: Bank account transactions
  - name: Bill credit notes
    description: Bill credit notes
  - name: Bill payments
    description: Bill payments
  - name: Bills
    description: Bills
  - name: Credit notes
    description: Credit notes
  - name: Customers
    description: Customers
  - name: Direct costs
    description: Direct costs
  - name: Direct incomes
    description: Direct incomes
  - name: Financials
    description: Financials
  - name: Info
    description: Info
  - name: Invoices
    description: Invoices
  - name: Items
    description: Items
  - name: Journal entries
    description: Journal entries
  - name: Journals
    description: Journals
  - name: Payment methods
    description: Payment methods
  - name: Payments
    description: Payments
  - name: Purchase orders
    description: Purchase orders
  - name: Sales orders
    description: Sales orders
  - name: Suppliers
    description: Suppliers
  - name: Tax rates
    description: Tax rates
  - name: Tracking categories
    description: Tracking categories
  - name: Transfers
    description: Transfers
paths:
  '/companies/{companyId}/connections/{connectionId}/data/accountTransactions':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Account transactions
      summary: List account transactions
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountTransaction'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the account transactions for a given company.
      operationId: list-account-transactions
  '/companies/{companyId}/connections/{connectionId}/data/accountTransactions/{accountTransactionId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: accountTransactionId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Account transactions
      summary: Get account transaction
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransaction'
      security:
        - API_Key: []
      operationId: get-account-transaction
      description: Gets the account transactions for a given company.Gets the specified account transaction for a given company and connection.
  '/companies/{companyId}/data/accounts':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Accounts
      summary: List accounts
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Account'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the latest accounts for a company
      operationId: get-accounts
  '/companies/{companyId}/data/accounts/{accountId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
    get:
      tags:
        - Accounts
      summary: Get account
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - API_Key: []
      description: Gets a single account corresponding to the supplied Id
      operationId: get-account
  '/companies/{companyId}/connections/{connectionId}/push/accounts':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Accounts
      summary: Create account
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Account'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an individual account for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=chartOfAccounts) for integrations that support POST methods.
      operationId: post-account
  '/companies/{companyId}/data/billCreditNotes':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Bill credit notes
      summary: List bill credit notes
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/BillCreditNote'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets a list of all bill credit notes for a company, with pagination'
      operationId: list-bill-credit-notes
  '/companies/{companyId}/data/billCreditNotes/{billCreditNoteId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: billCreditNoteId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Bill credit notes
      summary: Get billCreditNote
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillCreditNote'
      security:
        - API_Key: []
      description: Gets a single billCreditNote corresponding to the supplied Id
      deprecated: true
      operationId: get-bill-credit-note
  '/companies/{companyId}/connections/{connectionId}/push/billCreditNotes':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Bill credit notes
      summary: Create billCreditNote
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillCreditNote'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/BillCreditNote'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new billCreditNote to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billCreditNotes) for integrations that support POST methods.
      operationId: post-bill-credit-note
  '/companies/{companyId}/connections/{connectionId}/push/billCreditNotes/{billCreditNoteId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: billCreditNoteId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Bill credit notes
      summary: Update billCreditNote
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillCreditNote'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/BillCreditNote'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated billCreditNote to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billCreditNotes) for integrations that support PUT methods.
      operationId: update-bill-credit-note
  '/companies/{companyId}/data/billPayments':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Bill payments
      summary: List billPayments
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/BillPayment'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest billPayments for a company, with pagination'
      operationId: list-bill-payments
  '/companies/{companyId}/data/billPayments/{billPaymentId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: billPaymentId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Bill payments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillPayment'
      security:
        - API_Key: []
      summary: Get billPayment
      deprecated: true
      description: Get a bill payment
      operationId: get-bill-payments
  '/companies/{companyId}/connections/{connectionId}/push/billPayments':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Bill payments
      summary: Create billPayment
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillPayment'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/BillPayment'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new bill payment to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billPayments) for integrations that support POST methods.
      operationId: post-bill-payment
  '/companies/{companyId}/data/bills':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Bills
      summary: List bills
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Bill'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest bills for a company, with pagination'
      operationId: list-bills
  '/companies/{companyId}/data/bills/{billId}':
    parameters:
      - $ref: '#/components/parameters/billId'
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Bills
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
      security:
        - API_Key: []
      summary: Get bill
      description: Get bill
      operationId: get-bill
  '/companies/{companyId}/connections/{connectionId}/push/bills':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Bills
      summary: Create bill
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Bill'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new bill to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills) for integrations that support POST methods.
      operationId: post-bill
  '/companies/{companyId}/connections/{connectionId}/push/bills/{billId}':
    parameters:
      - $ref: '#/components/parameters/billId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    put:
      tags:
        - Bills
      summary: Update bill
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Bill'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated bill to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills) for integrations that support PUT methods.
      operationId: update-bill
  '/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments':
    parameters:
      - $ref: '#/components/parameters/billId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bills
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDataset'
      security:
        - API_Key: []
      operationId: get-bill-attachments
      summary: List bill attachments
      description: Get bill attachments
  '/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments/{attachmentId}':
    parameters:
      - $ref: '#/components/parameters/billId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bills
      parameters:
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
        - API_Key: []
      summary: Get bill attachment
      description: Get bill attachment
      operationId: get-bill-attachment
  '/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments/{attachmentId}/download':
    parameters:
      - $ref: '#/components/parameters/billId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bills
      parameters:
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Download bill attachment
      description: Download bill attachment
      operationId: download-bill-attachment
  '/companies/{companyId}/connections/{connectionId}/push/bills/{billId}/attachments':
    parameters:
      - $ref: '#/components/parameters/billId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Bills
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Create bill attachments
      description: Post bill attachments
      operationId: post-bill-attachments
  '/companies/{companyId}/data/creditNotes':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Credit notes
      summary: List creditNotes
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/CreditNote'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets a list of all credit notes for a company, with pagination'
      operationId: list-credit-notes
  '/companies/{companyId}/data/creditNotes/{creditNoteId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: creditNoteId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Credit notes
      summary: Get creditNote
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
      security:
        - API_Key: []
      description: Gets a single creditNote corresponding to the supplied Id
      operationId: get-credit-note
      deprecated: true
      x-internal: true
  '/companies/{companyId}/connections/{connectionId}/push/creditNotes':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Credit notes
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNote'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/CreditNote'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      summary: Create creditNote
      description: |-
        Push credit note


        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes) for integrations that support POST methods.
      operationId: push-credit-note
  '/companies/{companyId}/connections/{connectionId}/push/creditNotes/{creditNoteId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: creditNoteId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Credit notes
      summary: Update creditNote
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNote'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/CreditNote'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated credit note to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes) for integrations that support PUT methods.
      operationId: post-credit-note
  '/companies/{companyId}/data/customers':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Customers
      summary: List customers
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Customer'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest customers for a company, with pagination'
      operationId: get-customers
  '/companies/{companyId}/data/customers/{customerId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: customerId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Customers
      summary: Get customer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - API_Key: []
      description: Gets a single customer corresponding to the supplied Id
      operationId: get-customer
      x-internal: true
      deprecated: true
  '/companies/{companyId}/connections/{connectionId}/push/customers':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Customers
      summary: Create customer
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Customer'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      operationId: post-customer
      description: |-
        Posts an individual customer for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support POST methods.
  '/companies/{companyId}/connections/{connectionId}/push/customers/{customerId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: customerId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Customers
      summary: Update customer
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Customer'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated customer for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support PUT methods.
      operationId: update-customer
  '/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: customerId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Customers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDataset'
      security:
        - API_Key: []
      summary: List customer attachments
      description: Get customer attachments
      operationId: get-customer-attachments
  '/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments/{attachmentId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - Customers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
        - API_Key: []
      summary: Get customer attachment
      description: Get  customer attachment
      operationId: get-customer-attachment
  '/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments/{attachmentId}/download':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - Customers
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Download customer attachment
      description: Download customer attachment
      operationId: download-customer-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directCosts':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Direct costs
      summary: List directCosts
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/DirectCost'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the direct costs for the company.
      operationId: get-direct-costs
  '/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directCostId'
    get:
      tags:
        - Direct costs
      summary: Get directCost
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectCost'
      security:
        - API_Key: []
      description: Gets the specified direct cost for a given company.
      operationId: get-direct-cost
      deprecated: true
      x-internal: true
  '/companies/{companyId}/connections/{connectionId}/push/directCosts':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Direct costs
      summary: Create directCost
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectCost'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/DirectCost'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new direct cost to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directCosts) for integrations that support POST methods.
      operationId: post-direct-cost
  '/companies/{companyId}/connections/{connectionId}/push/directCosts/{directCostId}/attachment':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directCostId'
    post:
      tags:
        - Direct costs
      summary: Create directCost attachment
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      description: Posts a new direct cost attachment for a given company.
      operationId: post-direct-cost-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments/{attachmentId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directCostId'
    get:
      tags:
        - Direct costs
      summary: Get directCost attachment
      parameters:
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
        - API_Key: []
      description: Gets the specified direct cost attachment for a given company.
      operationId: get-direct-cost-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments/{attachmentId}/download':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directCostId'
    get:
      tags:
        - Direct costs
      summary: Download directCost attachment
      parameters:
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      description: Downloads an attachment for the specified direct cost for a given company.
      operationId: download-direct-cost-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directCostId'
    get:
      tags:
        - Direct costs
      summary: List directCost attachments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDataset'
      security:
        - API_Key: []
      description: Gets all attachments for the specified direct cost for a given company.
      operationId: list-direct-cost-attachments
  '/companies/{companyId}/connections/{connectionId}/data/directIncomes':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Direct incomes
      summary: Get directIncomes
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/DirectIncome'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the direct incomes for a given company.
      operationId: get-direct-incomes
  '/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Direct incomes
      summary: Get directIncome
      parameters:
        - name: directIncomeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectIncome'
      security:
        - API_Key: []
      description: Gets the specified direct income for a given company and connection.
      operationId: get-direct-income
      deprecated: true
      x-internal: true
  '/companies/{companyId}/connections/{connectionId}/push/directIncomes':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Direct incomes
      summary: Create directIncome
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectIncome'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/DirectIncome'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new direct income to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directIncomes) for integrations that support POST methods.
      operationId: post-direct-income
  '/companies/{companyId}/connections/{connectionId}/push/directIncomes/{directIncomeId}/attachment':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Direct incomes
      summary: Create directIncome attachment
      parameters:
        - name: directIncomeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      description: Posts a new direct income attachment for a given company.
      operationId: post-direct-income-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments/{attachmentId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directIncomeId'
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - Direct incomes
      summary: Get directIncome attachment
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
        - API_Key: []
      description: Gets the specified direct income attachment for a given company.
      operationId: get-direct-income-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments/{attachmentId}/download':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directIncomeId'
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - Direct incomes
      summary: Download directIncome attachment
      parameters:
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      description: Downloads an attachment for the specified direct income for a given company.
      operationId: download-direct-income-attachment
  '/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/directIncomeId'
    get:
      tags:
        - Direct incomes
      summary: List attachments for directIncome
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDataset'
      security:
        - API_Key: []
      description: Gets all attachments for the specified direct income for a given company.
      operationId: list-direct-income-attachments
  '/companies/{companyId}/data/financials/balanceSheet':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Financials
      summary: Get balance sheet
      parameters:
        - name: periodLength
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: periodsToCompare
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: startMonth
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceSheetResponse'
      security:
        - API_Key: []
      description: Gets the latest balance sheet for a company.
      operationId: get-balance-sheet
  '/companies/{companyId}/data/financials/profitAndLoss':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Financials
      summary: Get profit and loss
      parameters:
        - name: periodLength
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: periodsToCompare
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: startMonth
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfitAndLossResponse'
      security:
        - API_Key: []
      description: Gets the latest profit and loss for a company.
      operationId: get-profit-and-loss
  '/companies/{companyId}/data/financials/cashFlowStatement':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Financials
      summary: Get cash flow statement
      parameters:
        - name: periodLength
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: periodsToCompare
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: startMonth
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashFlowStatementResponse'
      security:
        - API_Key: []
      description: Gets the latest cash flow statement for a company.
      operationId: get-cash-flow-statement
  '/companies/{companyId}/data/info':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Info
      summary: Get company info
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDataset'
      security:
        - API_Key: []
      description: Gets the latest basic info for a company.
      operationId: get-company-info
    post:
      tags:
        - Info
      summary: Initiates the process of synchronising basic info for company
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
      security:
        - API_Key: []
      description: Initiates the process of synchronising basic info for a company
      operationId: post-sync-info
  '/companies/{companyId}/data/invoices':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Invoices
      summary: List invoices
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Invoice'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest invoices for a company, with pagination'
      operationId: list-invoices
  '/companies/{companyId}/data/invoices/{invoiceId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Invoices
      parameters:
        - $ref: '#/components/parameters/invoiceId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security:
        - API_Key: []
      summary: Get invoice
      deprecated: true
      description: Get invoice
      operationId: get-invoice
  '/companies/{companyId}/data/invoices/{invoiceId}/pdf':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Invoices
      parameters:
        - $ref: '#/components/parameters/invoiceId'
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Get invoice as PDF
      description: Get invoice as PDF
      operationId: get-invoice-pdf
  '/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Invoices
      parameters:
        - $ref: '#/components/parameters/invoiceId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDataset'
      security:
        - API_Key: []
      summary: Get invoice attachments
      description: Get invoice attachments
      operationId: get-invoice-attachments
  '/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments/{attachmentId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Invoices
      parameters:
        - $ref: '#/components/parameters/invoiceId'
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
        - API_Key: []
      summary: Get invoice attachment
      description: Get invoice attachments
      operationId: get-invoice-attachment
  '/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments/{attachmentId}/download':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Invoices
      parameters:
        - $ref: '#/components/parameters/invoiceId'
        - $ref: '#/components/parameters/attachmentId'
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Download invoice attachment
      description: Download invoice attachments
      operationId: donwload-invoice-attachment
  '/companies/{companyId}/connections/{connectionId}/push/invoices':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Invoices
      summary: Create invoice
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Invoice'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new invoice to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=invoices) for integrations that support POST methods.
      operationId: post-invoice
  '/companies/{companyId}/connections/{connectionId}/push/invoices/{invoiceId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    put:
      tags:
        - Invoices
      summary: Update invoice
      parameters:
        - $ref: '#/components/parameters/invoiceId'
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Invoice'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated invoice to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=invoices) for integrations that support PUT methods.
      operationId: update-invoice
  '/companies/{companyId}/connections/{connectionId}/push/invoices/{invoiceId}/attachment':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Invoices
      parameters:
        - $ref: '#/components/parameters/invoiceId'
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Push invoice attachment
      description: Push invoice attachment
      operationId: push-invoice-attachment
  '/companies/{companyId}/data/items':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Items
      summary: List items
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Item'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the items for a given company.
      operationId: list-items
  '/companies/{companyId}/data/items/{itemId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Items
      summary: Get item
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
      security:
        - API_Key: []
      operationId: get-item
      description: Gets the specified item for a given company.
      x-internal: true
      deprecated: true
  '/companies/{companyId}/connections/{connectionId}/push/items':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Items
      summary: Create item
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Item'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new item to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items) for integrations that support POST methods.
      operationId: post-item
  '/companies/{companyId}/data/journalEntries':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Journal entries
      summary: List journal entries
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/JournalEntry'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest journal entries for a company, with pagination'
      operationId: list-journal-entries
  '/companies/{companyId}/data/journalEntries/{journalEntryId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Journal entries
      summary: Get journalEntry
      parameters:
        - name: journalEntryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
      security:
        - API_Key: []
      description: Gets a single JournalEntry corresponding to the supplied Id
      operationId: get-journal-entry
      deprecated: true
      x-internal: true
  '/companies/{companyId}/connections/{connectionId}/push/journalEntries':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Journal entries
      summary: Create journalEntry
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/JournalEntry'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new journalEntry to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journalEntries) for integrations that support POST methods.
      operationId: post-journal-entry
  '/companies/{companyId}/data/journals':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Journals
      summary: List journals
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Journal'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest journals for a company, with pagination'
      operationId: list-journals
  '/companies/{companyId}/data/journals/{journalId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Journals
      summary: Get journal
      parameters:
        - name: journalId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journal'
      security:
        - API_Key: []
      description: Gets a single journal corresponding to the supplied Id
      operationId: get-journal
      x-internal: true
      deprecated: true
  '/companies/{companyId}/connections/{connectionId}/push/journals':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Journals
      summary: Create journal
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Journal'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Journal'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new journal to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journals) for integrations that support POST methods.
      operationId: push-journal
  '/companies/{companyId}/data/paymentMethods':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Payment methods
      summary: List all paymentMethods
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PaymentMethod'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the payment methods for a given company.
      operationId: list-payment-methods
      deprecated: true
      x-internal: true
  '/companies/{companyId}/data/paymentMethods/{paymentMethodId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: paymentMethodId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Payment methods
      summary: Get payment method
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
      security:
        - API_Key: []
      description: Gets the specified payment method for a given company.
      operationId: get-payment-method
      deprecated: true
      x-internal: true
  '/companies/{companyId}/data/payments':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Payments
      summary: List payments
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Payment'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest payments for a company, with pagination'
      operationId: list-payments
  '/companies/{companyId}/data/payments/{paymentId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Payments
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
      security:
        - API_Key: []
      summary: Get payment
      description: Get payment
      deprecated: true
      x-internal: true
      operationId: get-payment
  '/companies/{companyId}/connections/{connectionId}/push/payments':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Payments
      summary: Create payment
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Payment'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new payment to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=payments) for integrations that support POST methods.
      operationId: post-payment
  '/companies/{companyId}/data/purchaseOrders':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Purchase orders
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PurchaseOrder'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      summary: List purchaseOrders
      description: Get purchase orders
      operationId: list-purchase-orders
  '/companies/{companyId}/data/purchaseOrders/{purchaseOrderId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Purchase orders
      parameters:
        - name: purchaseOrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
      security:
        - API_Key: []
      x-internal: true
      deprecated: true
      summary: Get purchaseOrder
      description: Get purchase order
      operationId: get-purchase-order
  '/companies/{companyId}/connections/{connectionId}/push/purchaseOrders':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Purchase orders
      summary: Create purchaseOrder
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PurchaseOrder'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new purchase order to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders) for integrations that support POST methods.
      operationId: post-purchase-order
  '/companies/{companyId}/connections/{connectionId}/push/purchaseOrders/{purchaseOrderId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: purchaseOrderId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Purchase orders
      summary: Update purchaseOrder
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PurchaseOrder'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated purchase order to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders) for integrations that support PUT methods.
      operationId: update-purchase-order
  '/companies/{companyId}/data/salesOrders':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Sales orders
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/SalesOrder'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      summary: List salesOrders
      description: Get sales orders
      operationId: list-sales-orders
  '/companies/{companyId}/data/salesOrders/{salesOrderId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Sales orders
      parameters:
        - name: salesOrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
      security:
        - API_Key: []
      summary: Get salesOrder
      description: Get sales order
      deprecated: true
      x-internal: true
      operationId: get-sales-order
  '/companies/{companyId}/data/suppliers':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Suppliers
      summary: List suppliers
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Supplier'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: 'Gets the latest suppliers for a company, with pagination'
      operationId: list-suppliers
  '/companies/{companyId}/data/suppliers/{supplierId}':
    parameters:
      - $ref: '#/components/parameters/supplierId'
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Suppliers
      summary: Get supplier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
      security:
        - API_Key: []
      description: Gets a single supplier corresponding to the supplied Id
      deprecated: true
      x-internal: true
      operationId: get-supplier
  '/companies/{companyId}/connections/{connectionId}/push/suppliers':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Suppliers
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Supplier'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      summary: Create suppliers
      description: |-
        Push suppliers

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support POST methods.
      operationId: post-suppliers
  '/companies/{companyId}/connections/{connectionId}/push/suppliers/{supplierId}':
    parameters:
      - $ref: '#/components/parameters/supplierId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    put:
      tags:
        - Suppliers
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Supplier'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      summary: Update supplier
      description: |-
        Push supplier

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support PUT methods.
      operationId: put-supplier
  '/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments':
    parameters:
      - $ref: '#/components/parameters/supplierId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Suppliers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDataset'
      security:
        - API_Key: []
      summary: List supplier attachments
      description: Get supplier attachments
      operationId: list-supplier-attachments
  '/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments/{attachmentId}':
    parameters:
      - $ref: '#/components/parameters/supplierId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - Suppliers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
        - API_Key: []
      summary: Get supplier attachment
      description: Get supplier attachment
      operationId: get-supplier-attachment
  '/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments/{attachmentId}/download':
    parameters:
      - $ref: '#/components/parameters/supplierId'
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/attachmentId'
    get:
      tags:
        - Suppliers
      responses:
        '200':
          description: Success
      security:
        - API_Key: []
      summary: Download supplier attachment
      description: Download supplier attachment
      operationId: download-supplier-attachment
  '/companies/{companyId}/data/taxRates':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Tax rates
      summary: List all tax rates
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/TaxRate'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the latest tax rates for a given company.
      operationId: list-tax-rates
  '/companies/{companyId}/data/taxRates/{taxRateId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: taxRateId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Tax rates
      summary: Get tax rate
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
      security:
        - API_Key: []
      description: Gets the specified tax rate for a given company.
      operationId: get-tax-rate
      deprecated: true
      x-internal: true
  '/companies/{companyId}/data/trackingCategories':
    parameters:
      - $ref: ./parameters/companyId.yaml
    get:
      tags:
        - Tracking categories
      summary: List tracking categories
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/TrackingCategory'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the latest tracking categories for a given company.
      operationId: list-tracking-categories
  '/companies/{companyId}/data/trackingCategories/{trackingCategoryId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - name: trackingCategoryId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Tracking categories
      summary: Get tracking categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingCategoryTree'
      security:
        - API_Key: []
      description: Gets the specified tracking categories for a given company.
      operationId: get-tracking-category
      deprecated: true
      x-internal: true
  '/companies/{companyId}/connections/{connectionId}/data/transfers':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Transfers
      summary: List transfers
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transfer'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the transfers for a given company.
      operationId: list-transfers
  '/companies/{companyId}/connections/{connectionId}/data/transfers/{transferId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - name: transferId
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Transfers
      summary: Get transfer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
      security:
        - API_Key: []
      description: Gets the specified transfer for a given company.
      operationId: get-transfer
      deprecated: true
      x-internal: true
  '/companies/{companyId}/connections/{connectionId}/push/transfers':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Transfers
      summary: Create transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Transfer'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new transfer to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=transfers) for integrations that support POST methods.
      operationId: post-transfer
  '/companies/{companyId}/connections/{connectionId}/data/bankAccounts':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bank accounts
      summary: List bankAccounts
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/BankAccount'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the list of bank accounts for a given connection
      operationId: list-bank-accounts
  '/companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bank accounts
      summary: Get bankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
      security:
        - API_Key: []
      description: Gets the bank account with a given ID
      deprecated: true
      x-internal: true
      operationId: get-bank-account
  '/companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}/bankTransactions':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bank accounts
      summary: List bankTransactions for bankAccount
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/BankTransactions'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets bank transactions for a given bank account ID
      operationId: list-all-bank-transactions
  '/companies/{companyId}/connections/{connectionId}/options/bankAccounts/{accountId}/bankTransactions':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
      - $ref: ./parameters/connectionId.yaml
    get:
      tags:
        - Bank accounts
      summary: List push options for bankAccount bankTransactions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: ./schemas/shared/push/PushOption.yaml
      security:
        - API_Key: []
      description: Gets the options of pushing bank account transactions.
      operationId: get-bank-account-push-options
      x-extension-1: null
  '/companies/{companyId}/connections/{connectionId}/push/bankAccounts':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Bank accounts
      summary: Create bank account
      parameters:
        - $ref: '#/components/parameters/allowSyncOnPushComplete'
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/BankAccount'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts a new bank account to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts) for integrations that support pushing bank accounts.
      operationId: post-bank-account
  '/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{bankAccountId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: ./parameters/connectionId.yaml
      - $ref: '#/components/parameters/bankAccountId'
    put:
      tags:
        - Bank accounts
      summary: Update bank account
      parameters:
        - $ref: '#/components/parameters/timeoutInMinutes'
        - $ref: '#/components/parameters/forceUpdate'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/BankAccount'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts an updated bank account to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts) for integrations that support PUT methods.
      operationId: put-bank-account
  '/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{accountId}/bankTransactions':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
      - $ref: ./parameters/connectionId.yaml
    post:
      tags:
        - Bank accounts
      summary: Create bank transactions
      parameters:
        - $ref: '#/components/parameters/allowSyncOnPushComplete'
        - $ref: '#/components/parameters/timeoutInMinutes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankTransactions'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/BankTransactions'
                  - $ref: ./schemas/shared/push/PushOperationDefaults.yaml
      security:
        - API_Key: []
      description: |-
        Posts bank transactions to the accounting package for a given company.

        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions) for integrations that support POST methods.
      operationId: post-bank-transactions
  '/companies/{companyId}/data/bankAccounts/{accountId}':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
    get:
      tags:
        - Bank accounts
      summary: Get bankAccount
      parameters:
        - $ref: ./parameters/query.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankStatementAccount'
      deprecated: true
      security:
        - API_Key: []
      description: Gets the bank account for given account ID.
      operationId: get-all-bank-account
      x-internal: true
  '/companies/{companyId}/data/bankAccounts/{accountId}/transactions':
    parameters:
      - $ref: ./parameters/companyId.yaml
      - $ref: '#/components/parameters/accountId'
    get:
      tags:
        - Bank accounts
      summary: List all bankTransactions
      parameters:
        - $ref: ./parameters/page.yaml
        - $ref: ./parameters/pageSize.yaml
        - $ref: ./parameters/query.yaml
        - $ref: ./parameters/orderBy.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/BankStatementLine'
                  - $ref: ./schemas/metadata/PagingInfo.yaml
      security:
        - API_Key: []
      description: Gets the latest bank transactions for given account ID and company.
      operationId: list-bank-transactions
components:
  schemas:
    Account:
      $ref: ./schemas/accounting/Account.yaml
    AccountTransaction:
      $ref: ./schemas/accounting/AccountTransaction.yaml
    BalanceSheet:
      $ref: ./schemas/accounting/BalanceSheet.yaml
    BankAccount:
      $ref: ./schemas/accounting/BankAccount.yaml
    BankTransactions:
      $ref: ./schemas/accounting/BankTransactions.yaml
    BankStatementAccount:
      $ref: ./schemas/accounting/BankStatementAccount.yaml
    BankStatementLine:
      $ref: ./schemas/accounting/BankStatementLine.yaml
    Bill:
      $ref: ./schemas/accounting/Bill.yaml
    BillCreditNote:
      $ref: ./schemas/accounting/BillCreditNote.yaml
    BillPayment:
      $ref: ./schemas/accounting/BillPayment.yaml
    CashFlowStatement:
      $ref: ./schemas/accounting/CashFlowStatement.yaml
    CompanyDataset:
      $ref: ./schemas/accounting/CompanyDataset.yaml
    CreditNote:
      $ref: ./schemas/accounting/CreditNote.yaml
    Customer:
      $ref: ./schemas/accounting/Customer.yaml
    DirectCost:
      $ref: ./schemas/accounting/DirectCost.yaml
    DirectIncome:
      $ref: ./schemas/accounting/DirectIncome.yaml
    Invoice:
      $ref: ./schemas/accounting/Invoice.yaml
    Item:
      $ref: ./schemas/accounting/Item.yaml
    Journal:
      $ref: ./schemas/accounting/Journal.yaml
    JournalEntry:
      $ref: ./schemas/accounting/JournalEntry.yaml
    Payment:
      $ref: ./schemas/accounting/Payment.yaml
    PaymentMethod:
      $ref: ./schemas/accounting/PaymentMethod.yaml
    ProfitAndLossReport:
      $ref: ./schemas/accounting/ProfitAndLossReport.yaml
    PurchaseOrder:
      $ref: ./schemas/accounting/PurchaseOrder.yaml
    SalesOrder:
      $ref: ./schemas/accounting/SalesOrder.yaml
    Supplier:
      $ref: ./schemas/accounting/Supplier.yaml
    TaxRate:
      $ref: ./schemas/accounting/TaxRate.yaml
    TrackingCategory:
      $ref: ./schemas/accounting/TrackingCategory.yaml
    TrackingCategoryTree:
      $ref: ./schemas/accounting/TrackingCategoryTree.yaml
    Transfer:
      $ref: ./schemas/accounting/Transfer.yaml
    Attachment:
      $ref: ./schemas/accounting/Attachment.yaml
    AttachmentsDataset:
      $ref: ./schemas/accounting/AttachmentsDataset.yaml
    DataSet:
      $ref: ./schemas/accounting/DataSet.yaml
    CashFlowStatementResponse:
      $ref: ./schemas/accounting/CashFlowStatementResponse.yaml
    BalanceSheetResponse:
      $ref: ./schemas/accounting/BalanceSheetResponse.yaml
    ProfitAndLossResponse:
      $ref: ./schemas/accounting/ProfitAndLossResponse.yaml
  parameters:
    accountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for an account
    bankAccountId:
      name: bankAccountId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for a bank account
    timeoutInMinutes:
      name: timeoutInMinutes
      in: query
      schema:
        type: integer
        format: int32
    forceUpdate:
      name: forceUpdate
      in: query
      schema:
        type: boolean
        default: false
    invoiceId:
      name: invoiceId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for an invoice
    attachmentId:
      name: attachmentId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for an attachment
    supplierId:
      name: supplierId
      in: path
      required: true
      schema:
        type: string
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for a supplier
    allowSyncOnPushComplete:
      name: allowSyncOnPushComplete
      in: query
      schema:
        type: boolean
        default: true
    billId:
      name: billId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for a bill
    directCostId:
      name: directCostId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for a direct cost
    directIncomeId:
      name: directIncomeId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for a direct income
  securitySchemes:
    API_Key:
      type: apiKey
      description: 'The word "Basic" followed by a space and your API Key, base64 encoded, which can be found [here](https://app.codat.io/#/profile)'
      name: Your Base 64 encoded API Key
      in: header
security:
  - API_Key: []
