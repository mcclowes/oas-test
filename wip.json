{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "tfrhp9p2h6on2"
  },
  "info": {
    "title": "Accounting API",
    "version": "2.1.0",
    "contact": {
      "email": "support@codat.io",
      "name": "Codat"
    },
    "description": "A flexible API for pulling accounting data, normalized and aggregated from 20 accounting integrations.\n\nStandardize how you connect to your customersâ€™ accounting software. View, create, update, and delete data in the same way for all the leading accounting platforms.\n\n[Read more...](https://codat-docs.vercel.app/accounting-api/overview)",
    "termsOfService": "https://www.codat.io/legals/"
  },
  "servers": [
    {
      "url": "https://api.codat.io",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Accounts"
    },
    {
      "name": "Account transactions",
      "description": "Account transactions"
    },
    {
      "name": "Bank accounts",
      "description": "Bank accounts"
    },
    {
      "name": "Bank account transactions",
      "description": "Bank account transactions"
    },
    {
      "name": "Bill credit notes",
      "description": "Bill credit notes"
    },
    {
      "name": "Bill payments",
      "description": "Bill payments"
    },
    {
      "name": "Bills",
      "description": "Bills"
    },
    {
      "name": "Credit notes",
      "description": "Credit notes"
    },
    {
      "name": "Customers",
      "description": "Customers"
    },
    {
      "name": "Direct costs",
      "description": "Direct costs"
    },
    {
      "name": "Direct incomes",
      "description": "Direct incomes"
    },
    {
      "name": "Financials",
      "description": "Financials"
    },
    {
      "name": "Info",
      "description": "Info"
    },
    {
      "name": "Invoices",
      "description": "Invoices"
    },
    {
      "name": "Items",
      "description": "Items"
    },
    {
      "name": "Journal entries",
      "description": "Journal entries"
    },
    {
      "name": "Journals",
      "description": "Journals"
    },
    {
      "name": "Payment methods",
      "description": "Payment methods"
    },
    {
      "name": "Payments",
      "description": "Payments"
    },
    {
      "name": "Purchase orders",
      "description": "Purchase orders"
    },
    {
      "name": "Sales orders",
      "description": "Sales orders"
    },
    {
      "name": "Suppliers",
      "description": "Suppliers"
    },
    {
      "name": "Tax rates",
      "description": "Tax rates"
    },
    {
      "name": "Tracking categories",
      "description": "Tracking categories"
    },
    {
      "name": "Transfers",
      "description": "Transfers"
    }
  ],
  "paths": {
    "/companies/{companyId}/connections/{connectionId}/data/accountTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Account transactions"
        ],
        "summary": "List account transactions",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AccountTransaction"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the account transactions for a given company.",
        "operationId": "list-account-transactions"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/accountTransactions/{accountTransactionId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "accountTransactionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Account transactions"
        ],
        "summary": "Get account transaction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-account-transaction",
        "description": "Gets the account transactions for a given company.Gets the specified account transaction for a given company and connection."
      }
    },
    "/companies/{companyId}/data/accounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "List accounts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Account"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest accounts for a company",
        "operationId": "get-accounts"
      }
    },
    "/companies/{companyId}/data/accounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single account corresponding to the supplied Id",
        "operationId": "get-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/accounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create account",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Account"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an individual account for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=chartOfAccounts) for integrations that support POST methods.",
        "operationId": "post-account"
      }
    },
    "/companies/{companyId}/data/billCreditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "List bill credit notes",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BillCreditNote"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of all bill credit notes for a company, with pagination",
        "operationId": "list-bill-credit-notes"
      }
    },
    "/companies/{companyId}/data/billCreditNotes/{billCreditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "billCreditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "Get billCreditNote",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillCreditNote"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single billCreditNote corresponding to the supplied Id",
        "deprecated": true,
        "operationId": "get-bill-credit-note"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/billCreditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "Create billCreditNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BillCreditNote"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new billCreditNote to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billCreditNotes) for integrations that support POST methods.",
        "operationId": "post-bill-credit-note"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/billCreditNotes/{billCreditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "billCreditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "Update billCreditNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BillCreditNote"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated billCreditNote to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billCreditNotes) for integrations that support PUT methods.",
        "operationId": "update-bill-credit-note"
      }
    },
    "/companies/{companyId}/data/billPayments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bill payments"
        ],
        "summary": "List billPayments",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BillPayment"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest billPayments for a company, with pagination",
        "operationId": "list-bill-payments"
      }
    },
    "/companies/{companyId}/data/billPayments/{billPaymentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "billPaymentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Bill payments"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillPayment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get billPayment",
        "deprecated": true,
        "description": "Get a bill payment",
        "operationId": "get-bill-payments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/billPayments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bill payments"
        ],
        "summary": "Create billPayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillPayment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BillPayment"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new bill payment to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billPayments) for integrations that support POST methods.",
        "operationId": "post-bill-payment"
      }
    },
    "/companies/{companyId}/data/bills": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "List bills",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0,
              "example": 1,
              "default": 1
            },
            "description": "Page number. [Read more](https://codat-docs.vercel.app/using-the-api/paging).",
            "x-stoplight": {
              "id": "1318joqblpp4e"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "number",
              "default": 100,
              "example": 100,
              "minimum": 1,
              "maximum": 5000
            },
            "description": "Number of records to return in a page. [Read more](https://codat-docs.vercel.app/using-the-api/paging).",
            "x-stoplight": {
              "id": "s2ika6rltk5y6"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Codat query string. [Read more](https://codat-docs.vercel.app/using-the-api/querying).",
            "x-stoplight": {
              "id": "gupdb9kt30hfq"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "-modifiedDate"
            },
            "description": "Field to order results by. [Read more](https://codat-docs.vercel.app/using-the-api/ordering-results).",
            "x-stoplight": {
              "id": "4je9lwo02netu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Bill"
                          }
                        }
                      }
                    },
                    {
                      "title": "_Links",
                      "description": "Codat's Paging Model",
                      "examples": [
                        {
                          "_links": {
                            "self": {
                              "href": "/companies/{id}/data/{dataType}"
                            },
                            "current": {
                              "href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"
                            }
                          },
                          "pageNumber": 1,
                          "pageSize": 10,
                          "totalResults": 1
                        }
                      ],
                      "type": "object",
                      "allOf": [
                        {
                          "properties": {
                            "_links": {
                              "type": "object",
                              "required": [
                                "self",
                                "current"
                              ],
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "required": [
                                    "href"
                                  ],
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                },
                                "current": {
                                  "type": "object",
                                  "required": [
                                    "href"
                                  ],
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                },
                                "next": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                },
                                "previous": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                }
                              }
                            },
                            "pageNumber": {
                              "type": "integer"
                            },
                            "pageSize": {
                              "type": "integer"
                            },
                            "totalResults": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "_links",
                            "pageNumber",
                            "pageSize",
                            "totalResults"
                          ]
                        }
                      ],
                      "x-stoplight": {
                        "id": "5wohczray2nz5"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest bills for a company, with pagination",
        "operationId": "list-bills"
      }
    },
    "/companies/{companyId}/data/bills/{billId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get bill",
        "description": "Get bill",
        "operationId": "get-bill"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bills": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "connectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "description": "Unique identifier for a company's data connection."
          },
          "x-stoplight": {
            "id": "odjhmld3g3nmi"
          }
        }
      ],
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create bill",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Bill"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "changes": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Unknown",
                                  "Created",
                                  "Modified",
                                  "Deleted",
                                  "AttachmentUploaded"
                                ]
                              },
                              "recordRef": {
                                "title": "PushOperationRecordRef",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "dataType": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false
                              },
                              "attachmentId": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "dataType": {
                          "type": "string",
                          "nullable": true,
                          "description": "The type of data being pushed, eg invoices, customers."
                        },
                        "companyId": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0/schema"
                        },
                        "pushOperationKey": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted."
                        },
                        "dataConnectionKey": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1/schema"
                        },
                        "requestedOnUtc": {
                          "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                          "description": "The datetime when the push was requested."
                        },
                        "completedOnUtc": {
                          "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                          "description": "The datetime when the push was completed, null if Pending."
                        },
                        "timeoutInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "nullable": true
                        },
                        "timeoutInSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "nullable": true,
                          "deprecated": true
                        },
                        "status": {
                          "minLength": 1,
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Failed",
                            "Success",
                            "TimedOut"
                          ],
                          "description": "The status of the push operation."
                        },
                        "errorMessage": {
                          "type": "string",
                          "nullable": true
                        },
                        "validation": {
                          "type": "object",
                          "description": "A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.",
                          "properties": {
                            "errors": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "title": "ValidationItem",
                                "type": "object",
                                "properties": {
                                  "itemId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "message": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "validatorName": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "warnings": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1/properties/validation/properties/errors/items"
                              }
                            }
                          }
                        },
                        "statusCode": {
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "required": [
                        "companyId",
                        "pushOperationKey",
                        "dataConnectionKey",
                        "requestedOnUtc",
                        "status",
                        "statusCode"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new bill to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills) for integrations that support POST methods.",
        "operationId": "post-bill"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bills/{billId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "put": {
        "tags": [
          "Bills"
        ],
        "summary": "Update bill",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Bill"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated bill to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills) for integrations that support PUT methods.",
        "operationId": "update-bill"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-bill-attachments",
        "summary": "List bill attachments",
        "description": "Get bill attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get bill attachment",
        "description": "Get bill attachment",
        "operationId": "get-bill-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download bill attachment",
        "description": "Download bill attachment",
        "operationId": "download-bill-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bills/{billId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bills"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Create bill attachments",
        "description": "Post bill attachments",
        "operationId": "post-bill-attachments"
      }
    },
    "/companies/{companyId}/data/creditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Credit notes"
        ],
        "summary": "List creditNotes",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CreditNote"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of all credit notes for a company, with pagination",
        "operationId": "list-credit-notes"
      }
    },
    "/companies/{companyId}/data/creditNotes/{creditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "creditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Credit notes"
        ],
        "summary": "Get creditNote",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single creditNote corresponding to the supplied Id",
        "operationId": "get-credit-note",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/creditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Credit notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CreditNote"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Create creditNote",
        "description": "Push credit note\n\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes) for integrations that support POST methods.",
        "operationId": "push-credit-note"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/creditNotes/{creditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "creditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Credit notes"
        ],
        "summary": "Update creditNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CreditNote"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated credit note to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes) for integrations that support PUT methods.",
        "operationId": "post-credit-note"
      }
    },
    "/companies/{companyId}/data/customers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List customers",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Customer"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest customers for a company, with pagination",
        "operationId": "get-customers"
      }
    },
    "/companies/{companyId}/data/customers/{customerId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single customer corresponding to the supplied Id",
        "operationId": "get-customer",
        "x-internal": true,
        "deprecated": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/customers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "post-customer",
        "description": "Posts an individual customer for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support POST methods."
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/customers/{customerId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated customer for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support PUT methods.",
        "operationId": "update-customer"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List customer attachments",
        "description": "Get customer attachments",
        "operationId": "get-customer-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get customer attachment",
        "description": "Get  customer attachment",
        "operationId": "get-customer-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download customer attachment",
        "description": "Download customer attachment",
        "operationId": "download-customer-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "List directCosts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DirectCost"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the direct costs for the company.",
        "operationId": "get-direct-costs"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Get directCost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectCost"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct cost for a given company.",
        "operationId": "get-direct-cost",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directCosts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Create directCost",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectCost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DirectCost"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct cost to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directCosts) for integrations that support POST methods.",
        "operationId": "post-direct-cost"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directCosts/{directCostId}/attachment": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "post": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Create directCost attachment",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct cost attachment for a given company.",
        "operationId": "post-direct-cost-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Get directCost attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct cost attachment for a given company.",
        "operationId": "get-direct-cost-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Download directCost attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Downloads an attachment for the specified direct cost for a given company.",
        "operationId": "download-direct-cost-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "List directCost attachments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets all attachments for the specified direct cost for a given company.",
        "operationId": "list-direct-cost-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Get directIncomes",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DirectIncome"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the direct incomes for a given company.",
        "operationId": "get-direct-incomes"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Get directIncome",
        "parameters": [
          {
            "name": "directIncomeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectIncome"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct income for a given company and connection.",
        "operationId": "get-direct-income",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directIncomes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Create directIncome",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectIncome"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DirectIncome"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct income to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directIncomes) for integrations that support POST methods.",
        "operationId": "post-direct-income"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directIncomes/{directIncomeId}/attachment": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Create directIncome attachment",
        "parameters": [
          {
            "name": "directIncomeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct income attachment for a given company.",
        "operationId": "post-direct-income-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directIncomeId"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Get directIncome attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct income attachment for a given company.",
        "operationId": "get-direct-income-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directIncomeId"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Download directIncome attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Downloads an attachment for the specified direct income for a given company.",
        "operationId": "download-direct-income-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directIncomeId"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "List attachments for directIncome",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets all attachments for the specified direct income for a given company.",
        "operationId": "list-direct-income-attachments"
      }
    },
    "/companies/{companyId}/data/financials/balanceSheet": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Financials"
        ],
        "summary": "Get balance sheet",
        "parameters": [
          {
            "name": "periodLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "periodsToCompare",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceSheetResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest balance sheet for a company.",
        "operationId": "get-balance-sheet"
      }
    },
    "/companies/{companyId}/data/financials/profitAndLoss": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Financials"
        ],
        "summary": "Get profit and loss",
        "parameters": [
          {
            "name": "periodLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "periodsToCompare",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfitAndLossResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest profit and loss for a company.",
        "operationId": "get-profit-and-loss"
      }
    },
    "/companies/{companyId}/data/financials/cashFlowStatement": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Financials"
        ],
        "summary": "Get cash flow statement",
        "parameters": [
          {
            "name": "periodLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "periodsToCompare",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashFlowStatementResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest cash flow statement for a company.",
        "operationId": "get-cash-flow-statement"
      }
    },
    "/companies/{companyId}/data/info": {
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "description": "Unique identifier for your SMB in Codat."
          },
          "x-stoplight": {
            "id": "l1juboychi4p9"
          }
        }
      ],
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get company info",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest basic info for a company.",
        "operationId": "get-company-info"
      },
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Initiates the process of synchronising basic info for company",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSet"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Initiates the process of synchronising basic info for a company",
        "operationId": "post-sync-info"
      }
    },
    "/companies/{companyId}/data/invoices": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "List invoices",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Invoice"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest invoices for a company, with pagination",
        "operationId": "list-invoices"
      }
    },
    "/companies/{companyId}/data/invoices/{invoiceId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice",
        "deprecated": true,
        "description": "Get invoice",
        "operationId": "get-invoice"
      }
    },
    "/companies/{companyId}/data/invoices/{invoiceId}/pdf": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice as PDF",
        "description": "Get invoice as PDF",
        "operationId": "get-invoice-pdf"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice attachments",
        "description": "Get invoice attachments",
        "operationId": "get-invoice-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          },
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice attachment",
        "description": "Get invoice attachments",
        "operationId": "get-invoice-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          },
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download invoice attachment",
        "description": "Download invoice attachments",
        "operationId": "donwload-invoice-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/invoices": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Create invoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Invoice"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new invoice to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=invoices) for integrations that support POST methods.",
        "operationId": "post-invoice"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/invoices/{invoiceId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update invoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          },
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Invoice"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated invoice to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=invoices) for integrations that support PUT methods.",
        "operationId": "update-invoice"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/invoices/{invoiceId}/attachment": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Push invoice attachment",
        "description": "Push invoice attachment",
        "operationId": "push-invoice-attachment"
      }
    },
    "/companies/{companyId}/data/items": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "List items",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the items for a given company.",
        "operationId": "list-items"
      }
    },
    "/companies/{companyId}/data/items/{itemId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-item",
        "description": "Gets the specified item for a given company.",
        "x-internal": true,
        "deprecated": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/items": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create item",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Item"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new item to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items) for integrations that support POST methods.",
        "operationId": "post-item"
      }
    },
    "/companies/{companyId}/data/journalEntries": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journal entries"
        ],
        "summary": "List journal entries",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/JournalEntry"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest journal entries for a company, with pagination",
        "operationId": "list-journal-entries"
      }
    },
    "/companies/{companyId}/data/journalEntries/{journalEntryId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journal entries"
        ],
        "summary": "Get journalEntry",
        "parameters": [
          {
            "name": "journalEntryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single JournalEntry corresponding to the supplied Id",
        "operationId": "get-journal-entry",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/journalEntries": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Journal entries"
        ],
        "summary": "Create journalEntry",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/JournalEntry"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new journalEntry to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journalEntries) for integrations that support POST methods.",
        "operationId": "post-journal-entry"
      }
    },
    "/companies/{companyId}/data/journals": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "List journals",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Journal"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest journals for a company, with pagination",
        "operationId": "list-journals"
      }
    },
    "/companies/{companyId}/data/journals/{journalId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get journal",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single journal corresponding to the supplied Id",
        "operationId": "get-journal",
        "x-internal": true,
        "deprecated": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/journals": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Journals"
        ],
        "summary": "Create journal",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Journal"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new journal to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journals) for integrations that support POST methods.",
        "operationId": "push-journal"
      }
    },
    "/companies/{companyId}/data/paymentMethods": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Payment methods"
        ],
        "summary": "List all paymentMethods",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaymentMethod"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the payment methods for a given company.",
        "operationId": "list-payment-methods",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/paymentMethods/{paymentMethodId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "paymentMethodId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Payment methods"
        ],
        "summary": "Get payment method",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified payment method for a given company.",
        "operationId": "get-payment-method",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/payments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "List payments",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Payment"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest payments for a company, with pagination",
        "operationId": "list-payments"
      }
    },
    "/companies/{companyId}/data/payments/{paymentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get payment",
        "description": "Get payment",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-payment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/payments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create payment",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Payment"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new payment to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=payments) for integrations that support POST methods.",
        "operationId": "post-payment"
      }
    },
    "/companies/{companyId}/data/purchaseOrders": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Purchase orders"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PurchaseOrder"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List purchaseOrders",
        "description": "Get purchase orders",
        "operationId": "list-purchase-orders"
      }
    },
    "/companies/{companyId}/data/purchaseOrders/{purchaseOrderId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Purchase orders"
        ],
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "x-internal": true,
        "deprecated": true,
        "summary": "Get purchaseOrder",
        "description": "Get purchase order",
        "operationId": "get-purchase-order"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/purchaseOrders": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Purchase orders"
        ],
        "summary": "Create purchaseOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PurchaseOrder"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new purchase order to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders) for integrations that support POST methods.",
        "operationId": "post-purchase-order"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/purchaseOrders/{purchaseOrderId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "purchaseOrderId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Purchase orders"
        ],
        "summary": "Update purchaseOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PurchaseOrder"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated purchase order to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders) for integrations that support PUT methods.",
        "operationId": "update-purchase-order"
      }
    },
    "/companies/{companyId}/data/salesOrders": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Sales orders"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SalesOrder"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List salesOrders",
        "description": "Get sales orders",
        "operationId": "list-sales-orders"
      }
    },
    "/companies/{companyId}/data/salesOrders/{salesOrderId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Sales orders"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get salesOrder",
        "description": "Get sales order",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-sales-order"
      }
    },
    "/companies/{companyId}/data/suppliers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "List suppliers",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Supplier"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest suppliers for a company, with pagination",
        "operationId": "list-suppliers"
      }
    },
    "/companies/{companyId}/data/suppliers/{supplierId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get supplier",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single supplier corresponding to the supplied Id",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-supplier"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/suppliers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Supplier"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Create suppliers",
        "description": "Push suppliers\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support POST methods.",
        "operationId": "post-suppliers"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/suppliers/{supplierId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "put": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Supplier"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Update supplier",
        "description": "Push supplier\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support PUT methods.",
        "operationId": "put-supplier"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentsDataset"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List supplier attachments",
        "description": "Get supplier attachments",
        "operationId": "list-supplier-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get supplier attachment",
        "description": "Get supplier attachment",
        "operationId": "get-supplier-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download supplier attachment",
        "description": "Download supplier attachment",
        "operationId": "download-supplier-attachment"
      }
    },
    "/companies/{companyId}/data/taxRates": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Tax rates"
        ],
        "summary": "List all tax rates",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TaxRate"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest tax rates for a given company.",
        "operationId": "list-tax-rates"
      }
    },
    "/companies/{companyId}/data/taxRates/{taxRateId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "taxRateId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Tax rates"
        ],
        "summary": "Get tax rate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified tax rate for a given company.",
        "operationId": "get-tax-rate",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/trackingCategories": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Tracking categories"
        ],
        "summary": "List tracking categories",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TrackingCategory"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest tracking categories for a given company.",
        "operationId": "list-tracking-categories"
      }
    },
    "/companies/{companyId}/data/trackingCategories/{trackingCategoryId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "trackingCategoryId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Tracking categories"
        ],
        "summary": "Get tracking categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingCategoryTree"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified tracking categories for a given company.",
        "operationId": "get-tracking-category",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/transfers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "List transfers",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Transfer"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the transfers for a given company.",
        "operationId": "list-transfers"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/transfers/{transferId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "transferId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get transfer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified transfer for a given company.",
        "operationId": "get-transfer",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/transfers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Create transfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transfer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Transfer"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new transfer to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=transfers) for integrations that support POST methods.",
        "operationId": "post-transfer"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bankAccounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List bankAccounts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BankAccount"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the list of bank accounts for a given connection",
        "operationId": "list-bank-accounts"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Get bankAccount",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the bank account with a given ID",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-bank-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}/bankTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List bankTransactions for bankAccount",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BankTransactions"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets bank transactions for a given bank account ID",
        "operationId": "list-all-bank-transactions"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/options/bankAccounts/{accountId}/bankTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List push options for bankAccount bankTransactions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PushOption",
                  "required": [
                    "description",
                    "displayName",
                    "required",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "OptionType",
                      "enum": [
                        "Array",
                        "Object",
                        "String",
                        "Number",
                        "Boolean",
                        "DateTime",
                        "File",
                        "MultiPart"
                      ],
                      "type": "string"
                    },
                    "displayName": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "title": "PushOptionChoice",
                        "required": [
                          "description",
                          "displayName",
                          "required",
                          "type",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "value": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/type"
                          },
                          "displayName": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "description": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/options/items"
                            },
                            "nullable": true
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "validation": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/validation"
                          },
                          "rel": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "nullable": true
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "validation": {
                      "title": "PushValidationInfo",
                      "type": "object",
                      "properties": {
                        "warnings": {
                          "type": "array",
                          "items": {
                            "title": "PushFieldValidation",
                            "required": [
                              "details",
                              "field"
                            ],
                            "type": "object",
                            "properties": {
                              "field": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "details": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "ref": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "nullable": true
                        },
                        "information": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/validation/properties/warnings/items"
                          },
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "rel": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the options of pushing bank account transactions.",
        "operationId": "get-bank-account-push-options",
        "x-extension-1": null
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bankAccounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Create bank account",
        "parameters": [
          {
            "$ref": "#/components/parameters/allowSyncOnPushComplete"
          },
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BankAccount"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new bank account to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts) for integrations that support pushing bank accounts.",
        "operationId": "post-bank-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{bankAccountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/bankAccountId"
        }
      ],
      "put": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Update bank account",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BankAccount"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated bank account to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts) for integrations that support PUT methods.",
        "operationId": "put-bank-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{accountId}/bankTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Create bank transactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/allowSyncOnPushComplete"
          },
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BankTransactions"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts bank transactions to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions) for integrations that support POST methods.",
        "operationId": "post-bank-transactions"
      }
    },
    "/companies/{companyId}/data/bankAccounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Get bankAccount",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementAccount"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the bank account for given account ID.",
        "operationId": "get-all-bank-account",
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/bankAccounts/{accountId}/transactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List all bankTransactions",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BankStatementLine"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest bank transactions for given account ID and company.",
        "operationId": "list-bank-transactions"
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the account, unique for the company."
          },
          "nominalCode": {
            "type": "string",
            "nullable": true,
            "description": "Reference given to each nominal account for a business. It ensures money is allocated to the correct account. This code isn't a unique identifier in the Codat system."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the account."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description for the account."
          },
          "fullyQualifiedCategory": {
            "type": "string",
            "nullable": true,
            "description": "Full category of the account. For example:\nLiability.Current or Income.Revenue. See example data."
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "description": "Full name of the account, for example:\n- `Liability.Current.VAT`\n- `Income.Revenue.Sales`"
          },
          "currency": {
            "title": "Currency",
            "x-stoplight": {
              "id": "8ljuulqyuc5l4"
            },
            "type": "string",
            "description": "The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code. e.g. _GBP_.\n\n## Unknown currencies\n\nIn line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. \n\nThere are only a very small number of edge cases where this currency code is returned by the Codat system.",
            "format": "ISO4217",
            "examples": [
              "GBP",
              "USD",
              "EUR"
            ]
          },
          "currentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Current balance in the account."
          },
          "type": {
            "enum": [
              "Unknown",
              "Asset",
              "Expense",
              "Income",
              "Liability",
              "Equity"
            ],
            "type": "string",
            "description": "Type of account"
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Archived",
              "Pending"
            ],
            "type": "string",
            "description": "Status of the account"
          },
          "isBankAccount": {
            "type": "boolean",
            "description": "Confirms whether the account is a bank account or not."
          },
          "validDatatypeLinks": {
            "type": "array",
            "nullable": true,
            "description": "'The validDatatypeLinks can be used to determine whether an account can be correctly mapped to another object; for example, accounts with a `type` of `income` might only support being used on an Invoice and Direct Income. For more information, see Valid Data Type Links.'",
            "items": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "nullable": true,
                  "description": "The property from the account that can be linked."
                },
                "links": {
                  "type": "array",
                  "nullable": true,
                  "description": "Supported `dataTypes` that the record can be linked to.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "description": "When querying Codat's data model, some data types return `validDatatypeLinks` metadata in the JSON response. This indicates where that object can be used as a referenceâ€”a _valid link_â€”when creating or updating other data.\n\nFor example, `validDatatypeLinks` might indicate the following references:\n\n- Which tax rates are valid to use on the line item of a bill.\n- Which items can be used when creating an invoice. \n\nYou can use `validDatatypeLinks` to present your SMB customers with only valid choices when selecting objects from a list, for example.\n\n## `validDatatypeLinks` example\n\nThe following example uses the `Accounting.Accounts` data type. It shows that, on the linked integration, this account is valid as the account on a payment or bill payment; and as the account referenced on the line item of a direct income or direct cost. Because there is no valid link to Invoices or Bills, using this account on those data types will result in an error.\n\n```json validDatatypeLinks for an account\n{\n            \"id\": \"bd9e85e0-0478-433d-ae9f-0b3c4f04bfe4\",\n            \"nominalCode\": \"090\",\n            \"name\": \"Business Bank Account\",\n            #...\n            \"validDatatypeLinks\": [\n                {\n                    \"property\": \"Id\",\n                    \"links\": [\n                        \"Payment.AccountRef.Id\",\n                        \"BillPayment.AccountRef.Id\",\n                        \"DirectIncome.LineItems.AccountRef.Id\",\n                        \"DirectCost.LineItems.AccountRef.Id\"\n                    ]\n                }\n            ]\n        }\n```\n\n\n\n## Support for `validDatatypeLinks`\n\nCodat currently supports `validDatatypeLinks` for some data types on our Xero, QuickBooks Online, QuickBooks Desktop, Exact (NL), and Sage Business Cloud integrations. \n\nIf you'd like us to extend support to more data types or integrations, suggest or vote for this on our <a href=\"https://portal.productboard.com/codat/5-product-roadmap\">Product Roadmap</a>.",
              "title": "ValidDataTypeLinks"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "required": [
          "type",
          "status",
          "isBankAccount"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Language tip:** Accounts are also referred to as **chart of accounts**, **nominal accounts**, and **general ledger**.\n\nExplore the <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/Accounts\" target=\"_blank\">Accounts</a> endpoints in Swagger.\n\nView the coverage for accounts in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=chartOfAccounts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAccounts are the categories a business uses to record accounting transactions. From the Accounts endpoints, you can retrieve [a list of all accounts for a specified company](https://api.codat.io/swagger/index.html#/Accounts/Accounts_List). \n\nThe categories for an account include:\n  * Asset\n  * Expense\n  * Income\n  * Liability\n  * Equity.\n\n> **Accounts with no category**\n> \n> If an account is pulled from the chart of accounts and its nominal code does not lie within the category layout for the company's accounts, then the **type** is `Unknown`. The **fullyQualifiedCategory** and **fullyQualifiedName** fields return `null`.\n> \n> This approach gives a true representation of the company's accounts whilst preventing distorting financials such as a company's profit and loss and balance sheet reports.",
        "title": "Account"
      },
      "AccountTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the direct cost (unique to the company)."
          },
          "transactionId": {
            "type": "string",
            "nullable": true,
            "description": "Identifier of the transaction (unique to the company)."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Additional information about the account transaction, if available."
          },
          "bankAccountRef": {
            "description": "Reference to the bank account the account transaction is recorded against.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Bank account 'id' for the account transaction."
              },
              "name": {
                "type": "string",
                "description": "bank account 'name' for the account transaction."
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date the account transaction was recorded in the platform."
          },
          "status": {
            "enum": [
              "Unknown",
              "Unreconciled",
              "Reconciled",
              "Void"
            ],
            "type": "string",
            "description": "The status of the account transaction."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency"
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Conversion rate between the account transaction currency and the base currency used by the company."
          },
          "lines": {
            "type": "array",
            "nullable": true,
            "description": "Array of account transaction lines.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Description of the account transaction."
                },
                "recordRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/recordRef",
                  "description": "Links an account transaction line to the underlying record that created it."
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the bill payment currency."
                }
              }
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the account transactions, inclusive of tax."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Language tip:** In Codat, account transactions represent all transactions posted to a bank account within an accounting platform. For bank transactions posted within a banking platform, refer to [Banking transactions](https://docs.codat.io/docs/datamodel-banking-banking-transactions).\n\n> View the coverage for account transactions in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=accountTransactions\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nIn Codatâ€™s data model, account transactions represent bank activity within an accounting platform. All transactions that go through a bank account are recorded as account transactions.\n\nAccount transactions are created as a result of different business activities, for example:\n\n* Payments: for example, receiving money for payment against an invoice.\n* Bill payments: for example, spending money for a payment against a bill.\n* Direct costs: for example, withdrawing money from a bank account, either for cash purposes or to make a payment.\n* Direct incomes: for example, selling an item directly to a contact and receiving payment at point of sale.\n* Transfers: for example, transferring money between two bank accounts.\n\nAccount transactions is the parent data type of [payments](https://docs.codat.io/docs/datamodel-accounting-payments), [bill payments](https://docs.codat.io/docs/datamodel-accounting-billpayments), [direct costs](https://docs.codat.io/docs/datamodel-accounting-directcosts), [direct incomes](https://docs.codat.io/docs/datamodel-accounting-directincomes), and [transfers](https://docs.codat.io/docs/datamodel-accounting-transfers).\n\nPerform the following tasks using the <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/AccountTransactions\" target=\"_blank\">Account transactions</a> endpoints:\n\n* <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/AccountTransactions/get_companies__companyId__connections__connectionId__data_accountTransactions\" target=\"_blank\">Get a list of account transactions</a>\n* <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/AccountTransactions/get_companies__companyId__connections__connectionId__data_accountTransactions__accountTransactionId_\" target=\"_blank\">Get a single account transaction</a>",
        "title": "AccountTransaction"
      },
      "BalanceSheet": {
        "type": "object",
        "description": "> View the coverage for balance sheet in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=balanceSheet\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nThe balance sheet gives interested parties an idea of the company's financial position, in addition to displaying what the company owns and owes.\n\n> **Balance sheet or profit and loss report?**\n>\n> A profit and loss report summarises the total revenue, expenses, and profit or loss during a specified time period. A balance sheet report shows the financial position of a company at a specific moment in time.\n\n**Structure of this report**\nThis report will reflect the structure and line descriptions that the business has set in their own accounting platform.\n\n**History**\nBy default, Codat pulls (up to) 24 months of balance sheets for a company. You can adjust this to fetch more history, where available, by updating the `monthsToSync` value for `balanceSheet` on the [data type settings endpoint](https://codat-docs.vercel.app/codat-api#/operations/post-profile-syncSettings).\n\n**Want to pull this in a standardised structure?**\nOur [Enhanced Financials](https://docs.codat.io/docs/assess-enhanced-financials) endpoints provide the same report under standardized headings, allowing you to pull it in the same format for all of your business customers.",
        "title": "BalanceSheet",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Point in time when a snapshot of a company's financial position is taken."
          },
          "assets": {
            "type": "object",
            "title": "ReportLine",
            "properties": {
              "accountId": {
                "type": "string",
                "nullable": true,
                "description": "Identifier for the account, unique for the company in the accounting platform."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "Name of the report line item."
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "Numerical value of the line item."
              },
              "items": {
                "type": "array",
                "nullable": true,
                "description": "An array of ReportLine items.",
                "items": {
                  "$ref": "#/components/schemas/BalanceSheet/properties/assets"
                }
              }
            },
            "required": [
              "value"
            ]
          },
          "liabilities": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "ReportLines for liabilities. For example, current liabilities."
          },
          "netAssets": {
            "type": "number",
            "format": "double",
            "description": "Value of net assets for a company in their base currency."
          },
          "equity": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "\t\nReportLines for equities. For example, retained and current year earnings. See below."
          }
        },
        "required": [
          "netAssets"
        ]
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the account, unique for the company in the accounting platform."
          },
          "accountName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the bank account in the accounting platform."
          },
          "accountType": {
            "enum": [
              "Unknown",
              "Credit",
              "Debit"
            ],
            "type": "string",
            "description": "The type of the account."
          },
          "nominalCode": {
            "type": "string",
            "nullable": true,
            "description": "Code used to identify each nominal account for a business."
          },
          "sortCode": {
            "type": "string",
            "nullable": true,
            "description": "Sort code for the bank account.\n\nXero integrations\nThe sort code is only displayed when the currency = GBP and the sort code and account number sum to 14 digits. For non-GBP accounts, this field is not populated."
          },
          "accountNumber": {
            "type": "string",
            "nullable": true,
            "description": "Account number for the bank account.\n\nXero integrations\nOnly a UK account number shows for bank accounts with GBP currency and a combined total of sort code and account number that equals 14 digits, For non-GBP accounts, the full bank account number is populated.\n\nFreeAgent integrations\nFor Credit accounts, only the last four digits are required. For other types, the field is optional."
          },
          "iBan": {
            "type": "string",
            "nullable": true,
            "description": "International bank account number of the account. Often used when making or receiving international payments."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Base currency of the bank account."
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Balance of the bank account."
          },
          "institution": {
            "type": "string",
            "nullable": true,
            "description": "The institution of the bank account."
          },
          "availableBalance": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Total available balance of the bank account as reported by the underlying data source. This may take into account overdrafts or pending transactions for example."
          },
          "overdraftLimit": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Pre-arranged overdraft limit of the account.\n\nThe value is always positive. For example, an overdraftLimit of `1000` means that the balance of the account can go down to `-1000`."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Accessing Bank Accounts through Banking API**\n> \n> This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators. \n> \n> To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/docs/data-model-banking-banking-accounts)\n\n> View the coverage for bank accounts in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA list of bank accounts associated with a company and a specific [data connection](https://api.codat.io/swagger/index.html#/Connection/get_companies__companyId__connections__connectionId_).\n\nBank accounts data includes:\n* The name and ID of the account in the accounting platform.\n* The currency and balance of the account.\n* The sort code and account number.",
        "title": "BankAccount"
      },
      "BankTransactions": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankStatementLine"
            },
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "> **Accessing Bank Accounts through Banking API**\n> \n> This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators. \n>\n> To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/docs/data-model-banking-banking-transactions)\n\n> View the coverage for bank transactions in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nTransactional banking data for a specific company and account.\n\nBank transactions include the:\n* Amount of the transaction.\n* Current account balance.\n* Transaction type, for example, credit, debit, or transfer."
      },
      "BankStatementAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "nominalCode": {
            "type": "string",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "availableBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overdraftLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "institution": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BankStatementLine": {
        "required": [
          "amount",
          "balance",
          "date",
          "reconciled",
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "counterparty": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "reconciled": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "transactionType": {
            "enum": [
              "Unknown",
              "Credit",
              "Debit",
              "Int",
              "Div",
              "Fee",
              "SerChg",
              "Dep",
              "Atm",
              "Pos",
              "Xfer",
              "Check",
              "Payment",
              "Cash",
              "DirectDep",
              "DirectDebit",
              "RepeatPmt",
              "Other"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Bill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the bill, unique for the company in the accounting platform."
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "User-friendly reference for the bill."
          },
          "supplierRef": {
            "description": "Reference to the supplier the bill was received from.",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "supplierName": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "purchaseOrderRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "issueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date of the bill as recorded in the accounting platform."
          },
          "dueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date the supplier is due to be paid."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "Currency of the bill."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Rate for converting the total amount of the bill into the base currency for the company."
          },
          "lineItems": {
            "type": "array",
            "nullable": true,
            "description": "Array of BillLineItems.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Friendly name of the goods or services received."
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Price of each unit of goods or services."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units of goods or services received."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Numerical value of any discounts applied.\n\nDo not use to apply discounts in Oracle NetSuiteâ€”see Oracle NetSuite integration reference."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of the line, inclusive of discounts but exclusive of tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of tax for the line."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Total amount of the line, including tax."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "itemRef": {
                  "description": "Reference to the product, service type, or inventory item to which the line item is linked.",
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "Collection of categories against which this item is tracked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                },
                "tracking": {
                  "required": [
                    "categoryRefs",
                    "isBilledTo",
                    "isRebilledTo"
                  ],
                  "type": "object",
                  "properties": {
                    "categoryRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                      }
                    },
                    "customerRef": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/customerRef"
                    },
                    "projectRef": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/projectRef"
                    },
                    "isBilledTo": {
                      "enum": [
                        "Unknown",
                        "NotApplicable",
                        "Customer",
                        "Project"
                      ],
                      "type": "string"
                    },
                    "isRebilledTo": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/allOf/0/properties/results/items/properties/lineItems/items/properties/tracking/properties/isBilledTo"
                    }
                  }
                },
                "isDirectCost": {
                  "type": "boolean"
                }
              },
              "required": [
                "unitAmount",
                "quantity"
              ]
            }
          },
          "withholdingTax": {
            "type": "array",
            "nullable": true,
            "items": {
              "required": [
                "amount",
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "minLength": 1,
                  "type": "string"
                },
                "amount": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Open",
              "PartiallyPaid",
              "Paid",
              "Void",
              "Draft"
            ],
            "type": "string",
            "description": "Current state of the bill."
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the bill, excluding any taxes."
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of tax on the bill."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of the bill, including tax."
          },
          "amountDue": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Amount outstanding on the bill."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any private, company notes about the bill, such as payment information."
          },
          "paymentAllocations": {
            "type": "array",
            "nullable": true,
            "description": "An array of payment allocations.",
            "items": {
              "type": "object",
              "properties": {
                "payment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Identifier of the allocated payment."
                    },
                    "note": {
                      "type": "string",
                      "nullable": true,
                      "description": "Notes attached to the allocated payment."
                    },
                    "reference": {
                      "type": "string",
                      "nullable": true,
                      "description": "Reference to the allocated payment."
                    },
                    "accountRef": {
                      "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                      "description": "The account that the allocated payment is made from or to."
                    },
                    "currency": {
                      "$ref": "#/components/schemas/Account/properties/currency",
                      "description": "Currency the payment has been made in."
                    },
                    "currencyRate": {
                      "type": "number",
                      "format": "double",
                      "nullable": true,
                      "description": "Conversion rate between the currency of the allocated payment and the currency of the company."
                    },
                    "paidOnDate": {
                      "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                      "description": "The date the payment was paid."
                    },
                    "totalAmount": {
                      "type": "number",
                      "format": "double",
                      "description": "Total amount that was paid."
                    }
                  }
                },
                "allocation": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "$ref": "#/components/schemas/Account/properties/currency",
                      "description": "The currency of the transaction."
                    },
                    "currencyRate": {
                      "type": "number",
                      "format": "double",
                      "nullable": true,
                      "description": "The conversion rate between the currency of the allocated payment and the currency of the transaction."
                    },
                    "allocatedOnDate": {
                      "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                      "description": "The date the payment was allocated."
                    },
                    "totalAmount": {
                      "type": "number",
                      "format": "double",
                      "description": "The total amount that has been allocated."
                    }
                  }
                }
              },
              "required": [
                "payment",
                "allocation"
              ]
            }
          },
          "metadata": {
            "type": "object",
            "x-stoplight": {
              "id": "91706c48a98b5"
            },
            "properties": {
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              }
            }
          },
          "supplementalData": {
            "type": "object",
            "properties": {
              "content": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "nullable": true
              }
            }
          }
        },
        "required": [
          "issueDate",
          "status",
          "subTotal",
          "taxAmount",
          "totalAmount"
        ],
        "allOf": [
          {
            "allOf": [
              {
                "title": "ModifiedDate",
                "x-stoplight": {
                  "id": "z5gfpfg4fsp6v"
                },
                "type": "object",
                "properties": {
                  "modifiedDate": {
                    "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                    "description": "The date on which this record was last modified in Codat. [Read more...](https://docs.codat.io/docs/modified-dates)."
                  }
                }
              },
              {
                "title": "SourceModifiedDate",
                "x-stoplight": {
                  "id": "s0oihleme8suj"
                },
                "type": "object",
                "properties": {
                  "sourceModifiedDate": {
                    "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                    "description": "The date on which this record was last modified in the originating system"
                  }
                }
              }
            ]
          }
        ],
        "description": "> **Invoices or bills?**\n>\n> In Codat, bills are for accounts payable only. For the accounts receivable equivalent of bills, see [Invoices](https://docs.codat.io/docs/datamodel-accounting-invoices).\n\nView the coverage for bills in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nIn Codat, a bill contains details of:\n* When the bill was recorded in the accounting system.\n* How much the bill is for and the currency of the amount.\n* Who the bill was received from â€” the *supplier*.\n* What the bill is for â€” the *line items*.\n\nSome accounting platforms give a separate name to purchases where the payment is made immediately, such as something bought with a credit card or online payment. One example of this would be QuickBooks Online's *expenses*.\n\nYou can find these types of transactions in our [Direct costs](https://docs.codat.io/docs/datamodel-accounting-directcosts) data model.",
        "title": "Bill"
      },
      "BillCreditNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the bill credit note that is unique to a company in the accounting platform."
          },
          "billCreditNoteNumber": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the bill credit note."
          },
          "supplierRef": {
            "$ref": "#/components/schemas/Bill/properties/supplierRef",
            "description": "Supplier that issued the bill credit note."
          },
          "withholdingTax": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Bill/properties/withholdingTax/items"
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of credit that has been applied to the business' account with the supplier, including discounts and tax."
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "description": "Total value of any discounts applied."
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the bill credit note, including discounts but excluding tax."
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of tax included in the bill credit note."
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage rate of any discount applied to the bill credit note."
          },
          "remainingCredit": {
            "type": "number",
            "format": "double",
            "description": "Amount of the bill credit note that is still outstanding."
          },
          "status": {
            "enum": [
              "Unknown",
              "Draft",
              "Submitted",
              "Paid",
              "Void",
              "PartiallyPaid"
            ],
            "type": "string",
            "description": "Current state of the bill credit note"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the bill credit note was issued by the supplier."
          },
          "allocatedOnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date the bill credit note was fully refunded or allocated."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the bill credit note."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Conversion rate between the currency of the bill credit note and the base currency of the company."
          },
          "lineItems": {
            "type": "array",
            "nullable": true,
            "description": "An array of line ",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Friendly name of each line item. For example, the goods or service for which credit has been received."
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Unit price of the goods or service."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units of the goods or service for which credit has been received."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Value of any discounts applied."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of credit associated with the line item, including discounts but excluding tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of tax associated with the line item."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Total amount of the line item, including discounts and tax."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Percentage rate of any discount applied to the line item."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the item the line is linked to."
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "Reference to the tracking categories to which the line item is linked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                },
                "tracking": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/tracking"
                }
              },
              "required": [
                "unitAmount",
                "quantity"
              ]
            }
          },
          "paymentAllocations": {
            "nullable": true,
            "type": "array",
            "description": "An array of payment allocations.",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any additional information about the bill credit note."
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "required": [
          "totalAmount",
          "totalDiscount",
          "subTotal",
          "totalTaxAmount",
          "discountPercentage",
          "remainingCredit",
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Bill credit notes or credit notes?**\n> \n> In Codat, bill credit notes represent accounts payable only. For accounts receivable, see [Credit notes](https://docs.codat.io/docs/datamodel-accounting-creditnotes).\n\nView the coverage for bill credit notes in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billCreditNotes\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA bill credit note is issued by a supplier for the purpose of recording credit. For example, if a supplier was unable to fulfil an order that was placed by a business, or delivered damaged goods, they would issue a bill credit note. A bill credit note reduces the amount a business owes to the supplier. It can be refunded to the business or used to pay off future bills.\n\nIn the Codat API, a bill credit note is an accounts payable record issued by a [supplier](https://docs.codat.io/docs/datamodel-accounting-suppliers). \n\nA bill credit note includes details of:\n* The original and remaining credit.\n* Any allocations of the credit against other records, such as [bills](https://docs.codat.io/docs/datamodel-accounting-bills).\n* The supplier that issued the bill credit note.",
        "title": "BillCreditNote"
      },
      "BillPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the bill payment, unique for the company in the accounting platform."
          },
          "supplierRef": {
            "$ref": "#/components/schemas/Bill/properties/supplierRef",
            "description": "Supplier against which the payment is recorded in the accounting platform."
          },
          "accountRef": {
            "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
            "description": "Account the payment is linked to in the accounting platform."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of the payment in the payment currency. This value never changes and represents the amount of money that is paid into the supplier's account."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "ISO currency code in which the bill payment is recorded in the accounting platform."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Rate to convert the total amount of the bill payment into the base currency for the company, at the time of the payment."
          },
          "date": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date the bill payment was recorded in the accounting software."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Additional information associated with the payment."
          },
          "paymentMethodRef": {
            "$ref": "#/components/schemas/Payment/properties/paymentMethodRef",
            "description": "The Payment Method to which the payment is linked in the accounting platform."
          },
          "lines": {
            "type": "array",
            "nullable": true,
            "description": "An array of bill payment lines.",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the bill payment currency."
                },
                "links": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "enum": [
                          "Unknown",
                          "Unlinked",
                          "Bill",
                          "Other",
                          "CreditNote",
                          "BillPayment",
                          "PaymentOnAccount",
                          "Refund",
                          "ManualJournal",
                          "Discount"
                        ],
                        "type": "string",
                        "description": "Types of links to bill payment lines."
                      },
                      "id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Unique identifier of the transaction represented by the link."
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Amount by which the balance of the linked entity is altered, in the currency of the linked entity.\n\n- A negative link amount reduces the outstanding amount on the accounts payable account.\n- A positive link amount increases the outstanding amount on the accounts payable account."
                      },
                      "currencyRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Calculated as the amount of the bill payment allocated in the currency of the bill payment divided by the amount of the linked entity in the currency of the entity. When bill payment currencies and linked entity currencies are always the same, the `currencyRate` is 1."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "allocatedOnDate": {
                  "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                  "description": "AllocatedOnDate must be specified and be later than the issue date of the bill."
                }
              },
              "required": [
                "amount"
              ]
            }
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "Additional information associated with the payment."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "date"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Bill payments or payments?**  \n> \n> In Codat, bill payments represent accounts payable only. For accounts receivable, see [payments](https://docs.codat.io/docs/datamodel-accounting-payments), which includes [invoices](https://docs.codat.io/docs/datamodel-accounting-invoices) and [credit notes](https://docs.codat.io/docs/datamodel-accounting-creditnotes).\n\n> View the coverage for bill payments in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billPayments\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nBill payments include all accounts payable transaction data. This includes [bills](https://docs.codat.io/docs/datamodel-accounting-bills) and [credit notes against bills](https://docs.codat.io/docs/datamodel-accounting-billcreditnotes).\n\nA bill payment in Codat usually represents an allocation of money within any customer accounts payable account. This includes but is not strictly limited to:\n\n- A payment made against a billâ€”for example, a credit card payment, cheque payment, or cash payment.\n- An allocation of a supplier's credit note, to a bill or perhaps a refund.\n- A bill payment made directly to an accounts payable account. This could be an overpayment or a prepayment, or a refund of a payment made directly to an accounts payable account.\n\nDepending on the bill payments which are allowed by the underlying accounting package, some of these types may be combined. Please see the [Example data](#example-data) section for samples of what these cases look like.\n\nIn Codat, a bill payment contains details of:\n\n- When the bill payment was recorded in the accounting system.\n- How much it is for and in the currency.\n- Who the payment has been paid to, the _supplier_.\n- The types of bill payments, the _line items_.  \n\nSome accounting platforms give a separate name to purchases where the payment is made immediately, such as something bought with a credit card or online payment. One example of this would be QuickBooks Online's _expenses_. You can find these types of transactions in our [Direct costs](https://docs.codat.io/docs/datamodel-accounting-directcosts) data model.\n\nBill payments is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).",
        "title": "BillPayment"
      },
      "CashFlowStatement": {
        "type": "object",
        "properties": {
          "fromDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Start date for the reporting period."
          },
          "toDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "End date for the reporting period."
          },
          "cashReceipts": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "cashPayments": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "ReportLines for cash payments to suppliers for the purchase of goods or services."
          }
        },
        "description": "> View the coverage for cash flow statement in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=cashFlowStatement\" target=\"_blank\">Data coverage explorer</a>.\n\n> ** Operating activities only**  \n> \n> Currently, the cash flow statement shows cash that flows into and out of the company from operating activities *only*. Operating activities generate cash from the sale of goods or services.\n\n## Overview\n\nA cash flow statement is a financial report that records all cash that is received or spent by a company during a given period. It gives you a clearer picture of the companyâ€™s performance, and their ability to pay creditors and finance growth.\n\n> **Cash flow statement or balance sheet?**\n> \n> Look at the cash flow statement to understand a company's ability to pay its bills. Although the balance sheet may show healthy earnings at a specific point in time, the cash flow statement allows you to see whether the company is meeting its financial commitments, such as paying creditors or its employees.",
        "title": "CashFlowStatement"
      },
      "CompanyDataset": {
        "type": "object",
        "examples": [
          {
            "companyName": "string",
            "accountingPlatformRef": "string",
            "companyLegalName": "string",
            "addresses": [
              {
                "type": "Unknown",
                "line1": "string",
                "line2": "string",
                "city": "string",
                "region": "string",
                "country": "string",
                "postalCode": "string"
              }
            ],
            "phoneNumbers": [
              {
                "number": "string",
                "type": "Unknown"
              }
            ],
            "webLinks": [
              {
                "type": "Unknown",
                "url": "string"
              }
            ],
            "ledgerLockDate": "2022-10-23T00:00:00Z",
            "registrationNumber": "string",
            "taxNumber": "string",
            "financialYearStartDate": "2019-08-24T14:15:22Z",
            "baseCurrency": "string",
            "sourceUrls": {
              "property1": "string",
              "property2": "string"
            },
            "createdDate": "2019-08-24T14:15:22Z",
            "contractVersion": "string"
          }
        ],
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the linked company."
          },
          "accountingPlatformRef": {
            "type": "string",
            "nullable": true,
            "description": "Identifier or reference for the company in the accounting platform."
          },
          "companyLegalName": {
            "type": "string",
            "nullable": true,
            "description": "Registered legal name of the linked company."
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "description": "An array of Addresses.",
            "items": {
              "$ref": "#/components/schemas/Customer/properties/addresses/items"
            }
          },
          "phoneNumbers": {
            "type": "array",
            "nullable": true,
            "description": "An array of phone numbers.",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "string",
                  "nullable": true,
                  "description": "Phone number for a customer contact."
                },
                "type": {
                  "enum": [
                    "Unknown",
                    "Primary",
                    "Landline",
                    "Mobile",
                    "Fax"
                  ],
                  "type": "string",
                  "description": "Type of phone number."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "webLinks": {
            "type": "array",
            "nullable": true,
            "description": "An array of weblinks.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "Unknown",
                    "Website",
                    "Social"
                  ],
                  "type": "string",
                  "description": "Type of web link."
                },
                "url": {
                  "type": "string",
                  "nullable": true,
                  "description": "URL of a web link for a linked company."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "ledgerLockDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "If set in the accounting platform, the date (in the ISO 8601 date/time format) after which accounting transactions cannot be edited. Commonly used when books are closed at year-end."
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true,
            "description": "Registration number given to the linked company by the companies authority in the country of origin. In the UK this is Companies House."
          },
          "taxNumber": {
            "type": "string",
            "nullable": true,
            "description": "Company tax number."
          },
          "financialYearStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Start date of the financial year for the company."
          },
          "baseCurrency": {
            "type": "string",
            "nullable": true,
            "description": "Currency set in the accounting platform of the linked company. Used by the currency rate."
          },
          "sourceUrls": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "description": "URL addresses for the accounting source.\n\nFor example, for Xero integrations two URLs are returned. These have many potential use cases, such as deep linking."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date the linked company was created in the accounting platform."
          }
        },
        "title": "CompanyInfo"
      },
      "CreditNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the credit note, unique to the company in the accounting platform."
          },
          "creditNoteNumber": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the credit note."
          },
          "customerRef": {
            "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/customerRef",
            "description": "Reference to the customer the credit note has been issued to."
          },
          "withholdingTax": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Bill/properties/withholdingTax/items"
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of credit that has been applied to the customer's accounts receivable"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "description": "Any discounts applied to the credit note amount."
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "Value of the credit note, including discounts and excluding tax."
          },
          "additionalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "additionalTaxPercentage": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "Any tax applied to the credit note amount."
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "description": "Percentage rate (from 0 to 100) of discounts applied to the credit note."
          },
          "remainingCredit": {
            "type": "number",
            "format": "double",
            "description": "Unused balance of totalAmount originally raised."
          },
          "status": {
            "description": "Current state of the credit note.",
            "enum": [
              "Unknown",
              "Draft",
              "Submitted",
              "Paid",
              "Void",
              "PartiallyPaid"
            ],
            "type": "string"
          },
          "issueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date of the credit note as recorded in the accounting system."
          },
          "allocatedOnDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date on which the credit note was fully allocated."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the credit note."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Rate between the currency of the credit note and the base currency of the company."
          },
          "lineItems": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Friendly name of each line item. For example, the goods or service for which credit has been issued."
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Unit price of the goods or service."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units of the goods or service for which credit has been issued."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Value of any discounts applied."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of credit associated with the line item, including discounts but excluding tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of tax associated with the line item."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Total amount of the line item, including discounts and tax."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Percentage rate of any discount applied to the line item."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the item the line is linked to."
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "Reference to the tracking categories to which the line item is linked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                },
                "tracking": {
                  "type": "object",
                  "properties": {
                    "categoryRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                      }
                    },
                    "projectRef": {
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "customerRef": {
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "companyName": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "isBilledTo": {
                      "enum": [
                        "Unknown",
                        "NotApplicable",
                        "Project"
                      ],
                      "type": "string"
                    },
                    "isRebilledTo": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/isBilledTo"
                    }
                  },
                  "required": [
                    "categoryRefs",
                    "isBilledTo",
                    "isRebilledTo"
                  ]
                },
                "isDirectIncome": {
                  "type": "boolean"
                }
              },
              "required": [
                "unitAmount",
                "quantity"
              ]
            }
          },
          "paymentAllocations": {
            "type": "array",
            "nullable": true,
            "description": "An array of payment allocations.",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any additional information about the credit note. Where possible, Codat links to a data field in the accounting platform that is publicly available. This means that the contents of the note field are included when a credit note is emailed from the accounting platform to the customer."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "totalAmount",
          "totalDiscount",
          "subTotal",
          "totalTaxAmount",
          "discountPercentage",
          "remainingCredit",
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> View the coverage for credit notes in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nThink of a credit note as a voucher issued to a customer. It is a reduction that can be applied against one or multiple invoices. A credit note can either reduce the amount owed or cancel out an invoice entirely.\n\nIn the Codat system a credit note is issued to a [customer's](https://docs.codat.io/docs/datamodel-accounting-customers) accounts receivable. \n\nIt contains details of:\n* The amount of credit remaining and its status.\n* Payment allocations against the payments type, in this case an invoice.\n* Which customers the credit notes have been issued to.",
        "title": "CreditNote"
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the customer, unique to the company in the accounting platform."
          },
          "customerName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the customer as recorded in the accounting system, typically the company name."
          },
          "contactName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the main contact for the identified customer."
          },
          "emailAddress": {
            "type": "string",
            "nullable": true,
            "description": "Email address the customer can be contacted by."
          },
          "defaultCurrency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Default currency the transactional data of the customer is recorded in."
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number the customer can be contacted by."
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "description": "An array of Addresses.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "Unknown",
                    "Billing",
                    "Delivery"
                  ],
                  "type": "string",
                  "description": "Type of the address."
                },
                "line1": {
                  "type": "string",
                  "nullable": true,
                  "description": "Line 1 of the customer address."
                },
                "line2": {
                  "type": "string",
                  "nullable": true,
                  "description": "Line 2 of the customer address."
                },
                "city": {
                  "type": "string",
                  "nullable": true,
                  "description": "City of the customer address."
                },
                "region": {
                  "type": "string",
                  "nullable": true,
                  "description": "Region of the customer address."
                },
                "country": {
                  "type": "string",
                  "nullable": true,
                  "description": "Country of the customer address."
                },
                "postalCode": {
                  "type": "string",
                  "nullable": true,
                  "description": "Postal code or zip code."
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "contacts": {
            "type": "array",
            "nullable": true,
            "description": "An array of Contacts.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Name of a contact for a customer."
                },
                "email": {
                  "type": "string",
                  "nullable": true,
                  "description": "Email of a contact for a customer."
                },
                "phone": {
                  "type": "array",
                  "nullable": true,
                  "description": "An array of Phone numbers.",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDataset/properties/phoneNumbers/items"
                  }
                },
                "address": {
                  "$ref": "#/components/schemas/Customer/properties/addresses/items",
                  "description": "An object of Address information."
                },
                "status": {
                  "$ref": "#/components/schemas/Customer/properties/status",
                  "description": "Status of customer contacts.\n\nCustomers can have multiple contacts."
                },
                "modifiedDate": {
                  "type": "string",
                  "example": "2022-10-23T00:00:00Z",
                  "format": "date-time",
                  "description": "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> ðŸ“˜ Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.",
                  "title": "DateTime"
                }
              },
              "required": [
                "status"
              ]
            }
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true,
            "description": "Company number. In the UK, this is typically the Companies House company registration number."
          },
          "taxNumber": {
            "type": "string",
            "nullable": true,
            "description": "Company tax number."
          },
          "status": {
            "description": "Current state of the customer.",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> View the coverage for customers in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA customer is a person or organisation that buys goods or services. From the Customers endpoints, you can retrieve a [list of all the customers of a company](https://api.codat.io/swagger/index.html#/Customers/get_companies__companyId__data_customers).\n\nCustomers' data links to accounts receivable [invoices](https://docs.codat.io/docs/datamodel-accounting-invoices).\n",
        "title": "Customer"
      },
      "DirectCost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the direct cost, unique for the company."
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "User-friendly reference for the direct cost."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "A note attached to the direct cost."
          },
          "contactRef": {
            "$ref": "#/components/schemas/Transfer/properties/contactRef",
            "description": "A customer or supplier associated with the direct cost."
          },
          "issueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date of the direct cost as recorded in the accounting platform.Date of the direct cost as recorded in the accounting platform."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the direct cost."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Conversion rate between the currency of the direct costs and the base currency of the company."
          },
          "lineItems": {
            "type": "array",
            "description": "An array of line items.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Friendly name of the goods or services."
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Price of each unit of goods or services.\nNote: If the platform does not provide this information, the unit amount will be mapped to the total amount."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units of goods or services received.\n\nNote: If the platform does not provide this information, the quantity will be mapped as 1."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Discount amount for the line before tax."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Discount percentage for the line before tax."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of the line, inclusive of discounts but exclusive of tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of tax for the line."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Total amount of the line, including tax."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the product, service type, or inventory item to which the direct cost is linked."
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "Collection of categories against which this direct cost is tracked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                },
                "tracking": {
                  "type": "object",
                  "properties": {
                    "recordRefs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "invoiceTo": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "recordRefs"
                  ]
                }
              },
              "required": [
                "unitAmount",
                "quantity"
              ]
            }
          },
          "paymentAllocations": {
            "type": "array",
            "description": "An array of payment allocations.",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "The total amount of the direct costs, excluding any taxes."
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "description": "The total amount of tax on the direct costs."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the direct costs, inclusive of tax."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "issueDate",
          "currency",
          "lineItems",
          "paymentAllocations",
          "subTotal",
          "taxAmount",
          "totalAmount"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Language tip: ** Direct costs may also be referred to as **Spend transactions**, **Spend money transactions**, or **Payments** in various accounting platforms.\n\n> View the coverage for direct costs in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directCosts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nDirect costs include:\n  * Purchasing an item and paying it off at the point of the purchase\n  * Receiving cash from a refunded item if the refund is made by the supplier\n  * Withdrawing money from a bank account \n  * Writing a cheque\n\nFrom the Direct Costs endpoints, you can: \n\n  * [Get a list of all direct costs for a specific company ](https://api.codat.io/swagger/index.html#/DirectCosts/get_companies__companyId__connections__connectionId__data_directCosts)\n  * [Get a single direct cost for a specific company ](https://api.codat.io/swagger/index.html#/DirectCosts/get_companies__companyId__connections__connectionId__data_directCosts__directCostId_)\n  * [Add a new direct cost to a specific company's accounting package](https://api.codat.io/swagger/index.html#/DirectCosts/post_companies__companyId__connections__connectionId__push_directCosts)\n\nDirect costs is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).",
        "title": "DirectCost"
      },
      "DirectIncome": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the direct income, unique for the company."
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "User-friendly reference for the direct income."
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "contactRef": {
            "$ref": "#/components/schemas/Transfer/properties/contactRef",
            "description": "A customer or supplier associated with the direct income."
          },
          "issueDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the direct income as recorded in the accounting platform."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "The currency of the direct income."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "The conversion rate between the currency of the direct incomes and the base currency of the company."
          },
          "lineItems": {
            "type": "array",
            "description": "An array of line items.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "A user-friendly name of the goods or services."
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "The price of each unit of goods or services.\nNote: If the platform does not provide this information, the unit amount will be mapped to the total amount."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "The number of units of goods or services received.\n\nNote: If the platform does not provide this information, the quantity will be mapped as 1."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Discount amount for the line before tax."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Discount percentage for the line before tax."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "The amount of the line, inclusive of discounts, but exclusive of tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "The amount of tax for the line.\nNote: If the platform does not provide this information, the quantity will be mapped as 0.00."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "The total amount of the line, including tax."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the product, service type, or inventory item to which the direct cost is linked."
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "An array of categories against which this direct cost is tracked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                }
              },
              "required": [
                "unitAmount",
                "quantity"
              ]
            }
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "The total amount of the direct incomes, excluding any taxes."
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "description": "The total amount of tax on the direct incomes."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the direct incomes, inclusive of tax."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "issueDate",
          "currency",
          "lineItems",
          "paymentAllocations",
          "subTotal",
          "taxAmount",
          "totalAmount"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "description": "> **Language tip:**  Direct incomes may also be referred to as **Receive transactions**, **Receive money transactions**, **Sales receipts**, or **Cash sales** in various accounting platforms.\n\n> View the coverage for direct incomes in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directIncomes\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nDirect incomes include: \n\n- Selling an item directly to a contact, and receiving payment at the point of the sale.\n- Refunding an item in cash to a contact.\n- Depositing money into a bank account.\n\nFrom the Direct Incomes endpoints, you can: \n\n- [Get a list of all direct incomes for a specific company](https://api-uat.codat.io/swagger/index.html#/DirectIncomes/get_companies__companyId__connections__connectionId__data_directIncomes)\n- [Get a single direct income for a specific company and connection](https://api-uat.codat.io/swagger/index.html#/DirectIncomes/get_companies__companyId__connections__connectionId__data_directIncomes__directIncomeId_)\n- [Add a new direct income to a specific company's accounting package](https://api-uat.codat.io/swagger/index.html#/DirectIncomes/post_companies__companyId__connections__connectionId__push_directIncomes)\n\nDirect incomes is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).\n",
        "title": "DirectIncome"
      },
      "Invoice": {
        "description": "> View the coverage for invoices in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=invoices\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAn invoice is an itemized record of goods sold or services provided to a [customer](https://docs.codat.io/docs/datamodel-accounting-customers).\n\nIn Codat, an invoice contains details of:\n\n- The timeline of the invoiceâ€”when it was raised, marked as paid, last edited, and so on.\n- How much the invoice is for, what portion of the invoice is tax or discounts, and what currency the amounts are represented in. \n- Who the invoice has been raised to; the _customer_.\n- The breakdown of what the invoice is for; the _line items_.\n- Any [payments](https://docs.codat.io/docs/datamodel-accounting-payments) assigned to the invoice; the _payment allocations_.\n\n> **Invoices or bills?**  \n>\n> In Codat, invoices represent accounts receivable only. For accounts payable invoices, see [Bills](https://docs.codat.io/docs/datamodel-accounting-bills).\n\n> **Invoice PDF downloads**  \n>\n> You can <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/Invoices/get_companies__companyId__data_invoices__invoiceId__pdf\" target=\"_blank\">download a PDF version</a> of an invoice for supported integrations.\n> \n> The filename will be invoice-{number}.pdf.",
        "title": "Invoice",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the invoice, unique to the company in the accounting platform."
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the invoice. If available, this appears in the file name of invoice attachments."
          },
          "customerRef": {
            "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/customerRef",
            "description": "Reference to the customer the invoice has been issued to."
          },
          "salesOrderRefs": {
            "type": "array",
            "nullable": true,
            "description": "List of references to related Sales orders.",
            "items": {
              "type": "string"
            }
          },
          "issueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date of the invoice as recorded in the accounting system."
          },
          "dueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date the customer is due to be paid by."
          },
          "paidOnDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date the invoice was marked as paid in the accounting system. If this field is not available from the accounting software, it is calculated by Codat using associated payments."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the invoice."
          },
          "currencyRate": {
            "title": "CurrencyRate",
            "x-stoplight": {
              "id": "l2tsi4qzx7tt3"
            },
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.\n\nCurrency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.  \n\nWhere the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places). \n\nFor accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.\n\n## Examples with base currency of GBP\n\n| Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |\n| :--------------- | :------------- | :------------ | :------------------------- |\n| **USD**          | $20            | 0.781         | Â£15.62                     |\n| **EUR**          | â‚¬20            | 0.885         | Â£17.70                     |\n| **RUB**          | â‚½20            | 0.011         | Â£0.22                      |\n\n## Examples with base currency of USD\n\n| Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |\n| :--------------- | :------------- | :------------ | :------------------------- |\n| **GBP**          | Â£20            | 1.277         | $25.54                     |\n| **EUR**          | â‚¬20            | 1.134         | $22.68                     |\n| **RUB**          | â‚½20            | 0.015         | $0.30                      |"
          },
          "lineItems": {
            "type": "array",
            "nullable": true,
            "description": "An array of line items.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Friendly name of the goods or services provided."
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Price of each unit of goods or services."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units of goods or services provided."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Numerical value of any discounts applied."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of the line, inclusive of discounts but exclusive of tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Amount of tax for the line."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Total amount of the line, including tax. When pushing invoices to Xero, the total amount is exclusive of tax to allow automatic calculations if a tax rate or tax amount is not specified."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true,
                  "description": "Percentage rate (from 0 to 100) of any discounts applied to the unit amount."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the item the line is linked to."
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "Reference to the tracking categories to which the line item is linked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                },
                "tracking": {
                  "required": [
                    "categoryRefs",
                    "isBilledTo",
                    "isRebilledTo"
                  ],
                  "type": "object",
                  "properties": {
                    "categoryRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                      }
                    },
                    "projectRef": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/projectRef"
                    },
                    "customerRef": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/customerRef"
                    },
                    "isBilledTo": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/isBilledTo"
                    },
                    "isRebilledTo": {
                      "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/isBilledTo"
                    }
                  }
                },
                "isDirectIncome": {
                  "type": "boolean"
                }
              },
              "required": [
                "unitAmount",
                "quantity"
              ]
            }
          },
          "paymentAllocations": {
            "type": "array",
            "nullable": true,
            "description": "\t\nAn array of payment allocations.",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "withholdingTax": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Bill/properties/withholdingTax/items"
            }
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Numerical value of discounts applied to the invoice."
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Total amount of the invoice excluding any taxes."
          },
          "additionalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "additionalTaxPercentage": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of tax on the invoice."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of the invoice, inclusive of tax."
          },
          "amountDue": {
            "type": "number",
            "format": "double",
            "description": "Amount outstanding on the invoice."
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Percentage rate (from 0 to 100) of discounts applied to the invoice. For example: A 5% discount will return a value of `5`, not `0.05`."
          },
          "status": {
            "enum": [
              "Unknown",
              "Draft",
              "Submitted",
              "PartiallyPaid",
              "Paid",
              "Void"
            ],
            "type": "string",
            "description": "Current state of the invoice:\n\n- `Draft` - Invoice hasn't been submitted to the supplier. It may be in a pending state or is scheduled for future submission, for example by email.\n- `Submitted` - Invoice is no longer a draft. It has been processed and, or, sent to the customer. In this state, it will impact the ledger. It also has no payments made against it (amountDue == totalAmount).\n- `PartiallyPaid` - The balance paid against the invoice is positive, but less than the total invoice amount (0 < amountDue < totalAmount).\n- `Paid` - Invoice is paid in full. This includes if the invoice has been credited or overpaid (amountDue == 0).\n- `Void` - An invoice can become Void when it's deleted, refunded, written off, or cancelled. A voided invoice may still be PartiallyPaid, and so all outstanding amounts on voided invoices are removed from the accounts receivable account."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any additional information about the invoice. Where possible, Codat links to a data field in the accounting platform that is publicly available. This means that the contents of the note field are included when an invoice is emailed from the accounting platform to the customer."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "issueDate",
          "totalTaxAmount",
          "totalAmount",
          "amountDue",
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "Item": {
        "description": "> View the coverage for items in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\n**Items** allow your customers to save and track details of the products and services that they buy and sell.\n",
        "title": "Item",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the item that is unique to a company in the accounting platform."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the item in the accounting platform."
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the item."
          },
          "itemStatus": {
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string",
            "description": "Current state of the item, either:\n\n- `Active`: Available for use\n- `Archived`: Unavailable\n- `Unknown`\n\nDue to a [limitation in Xero's API](https://docs.codat.io/docs/xero-faq#section-5-why-do-all-of-my-items-from-xero-have-their-status-as-unknown), all items from Xero are mapped as `Unknown`."
          },
          "type": {
            "enum": [
              "Unknown",
              "Inventory",
              "NonInventory",
              "Service"
            ],
            "type": "string",
            "description": "Type of the item."
          },
          "isBillItem": {
            "type": "boolean",
            "description": "Whether you can use this item for bills."
          },
          "billItem": {
            "type": "object",
            "description": "Item details that are only for bills.",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Short description of the product or service that has been bought by the customer."
              },
              "unitPrice": {
                "type": "number",
                "format": "double",
                "nullable": true,
                "description": "Unit price of the product or service."
              },
              "accountRef": {
                "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                "description": "Reference of the account to which the item is linked."
              },
              "taxRateRef": {
                "description": "Reference of the tax rate to which the item is linked.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "'id' from the 'taxRates' data type."
                  },
                  "name": {
                    "type": "string",
                    "description": "'name' from the 'taxRates' data type."
                  },
                  "effectiveTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Applicable tax rate."
                  }
                }
              }
            }
          },
          "isInvoiceItem": {
            "type": "boolean",
            "description": "Whether you can use this item for invoices."
          },
          "invoiceItem": {
            "type": "object",
            "description": "Item details that are only for bills.",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Short description of the product or service that has been bought by the customer."
              },
              "unitPrice": {
                "type": "number",
                "format": "double",
                "nullable": true,
                "description": "Unit price of the product or service."
              },
              "accountRef": {
                "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                "description": "Reference of the account to which the item is linked."
              },
              "taxRateRef": {
                "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                "description": "Reference of the tax rate to which the item is linked."
              }
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "required": [
          "itemStatus",
          "type",
          "isBillItem",
          "isInvoiceItem"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "Journal": {
        "title": "Journal",
        "description": "> **Language tip:** For line items, or individual transactions, of a company's financial documents, refer to the [Journal entries](https://docs.codat.io/docs/datamodel-accounting-journalentries) data type\n\n> View the coverage for journals in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journals\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nIn accounting software, journals are used to record all the financial transactions of a company. Each transaction in a journal is represented by a separate [journal entry](https://docs.codat.io/docs/datamodel-accounting-journalentries). These entries are used to create the general ledger, which is then used to create the financial statements of a business.\n\nWhen a company records all their transactions in a single journal, it can become large and difficult to maintain and track. This is why large companies often use multiple journals (also known as subjournals) to categorize and manage journal entries.\n\nSuch journals can be divided into two categories:\n\n- Special journals: journals used to record specific types of transactions; for example, a purchases journal, a sales journal, or a cash management journal.\n- General journals: journals used to record transactions that fall outside the scope of the special journals.\n\nMultiple journals or subjournals are used in the following Codat integrations:\n\n- [Sage Intacct](https://docs.codat.io/docs/accounting-sage-intacct)  (mandatory)\n- [Exact Online](https://docs.codat.io/docs/accounting-exact)  (mandatory)\n- [Oracle NetSuite](https://docs.codat.io/docs/accounting-netsuite) (optional)\n\n> When pushing journal entries to an accounting platform that doesnâ€™t support multiple journals (multi-book accounting), the entries will be linked to the platform-generic journal. The Journals data type will only include one object.\n",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Journal ID."
          },
          "journalCode": {
            "type": "string",
            "nullable": true,
            "description": "Native journal number or code."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Journal name.\nThe maximum length for a journal name is 256 characters. All characters above that number will be truncated."
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "The type of the journal."
          },
          "parentId": {
            "type": "string",
            "nullable": true,
            "description": "Parent journal ID.\nIf the journal is a parent journal, this value is not present."
          },
          "hasChildren": {
            "type": "boolean",
            "description": "If the journal has child journals, this value is true. If it doesnâ€™t, it is false."
          },
          "createdOn": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Journal creation date."
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string",
            "description": "Current journal status."
          },
          "metadata": {
            "title": "Metadata",
            "x-stoplight": {
              "id": "70eec7b9v3qnk"
            },
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "description": "Additional information about the entity",
                "readOnly": true,
                "properties": {
                  "isDeleted": {
                    "type": "boolean",
                    "description": "Indicates whether the record has been deleted in the third-party system this record originiated from",
                    "examples": [
                      false,
                      true
                    ],
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "additionalProperties": false
      },
      "JournalEntry": {
        "title": "JournalEntry",
        "description": "> **Language tip:** For the top-level record of a company's financial transactions, refer to the [Journals](https://docs.codat.io/docs/journals) data type\n\n> View the coverage for journal entries in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journalEntries\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA journal entry report shows the entries made in a company's general ledger, or [accounts](https://api.codat.io/swagger/index.html#/Accounts/get_companies__companyId__data_accounts), when transactions are approved. The journal line items for each journal entry should balance.\n\nA journal entry line item is a single transaction line on the journal entry. For example: \n\n- When a journal entry is recording a receipt of cash, the credit to accounts receivable and the debit to cash are separate line items. \n- When a company needs to recognise revenue from an annual contract on a monthly basis, on receipt of cash for month one, they make a debit to deferred income and a credit to revenue.\n\nIn Codat a journal entry contains details of:\n\n- The date on which the entry was created and posted.\n- Itemised lines, including amounts and currency.\n- A reference to the associated accounts.\n- A reference to the underlying record. For example, the invoice, bill, or other data type that triggered the posting of the journal entry to the general ledger. \n\n> **Pushing journal entries **  \n> Codat only supports journal entries in the base currency of the company that are pushed into accounts denominated in the same base currency.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the journal entry for the company in the accounting platform."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Optional description of the journal entry."
          },
          "postedOn": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date on which the journal entry was posted to the accounting platform, and had an impact on the general ledger. This may be different from the creation date.\n\nFor example, a user creates a journal entry on Monday and saves it as draft, which has no impact on the general ledger. On Thursday, they return to the entry and post it.\n\nThe **createdOn** date shows as Monday.\nThe **postedOn** date shows as Thursday.\nJournal entries can also be backdated, so the **postedOn** date may be earlier than the **createdOn** date."
          },
          "createdOn": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date on which the journal was created in the accounting platform."
          },
          "updatedOn": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date on which the journal was last updated in the accounting platform."
          },
          "journalRef": {
            "type": "object",
            "description": "Links journal entries to the relevant journal in accounting integrations that use multi-book accounting (multiple journals).",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string",
                "description": "GUID of the underlying journal."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "Journal name, 256 characters max."
              }
            },
            "required": [
              "id"
            ]
          },
          "journalLines": {
            "type": "array",
            "nullable": true,
            "description": "An array of journal lines.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Description of the journal line item."
                },
                "netAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount for the journal line. Debit entries are considered positive, and credit entries are considered negative."
                },
                "currency": {
                  "type": "string",
                  "nullable": true,
                  "description": "Currency for the journal line item."
                },
                "accountRef": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "'id' from the Accounts data type."
                    },
                    "name": {
                      "type": "string",
                      "description": "'name' from the Accounts data type."
                    }
                  },
                  "description": "Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account."
                },
                "tracking": {
                  "$ref": "#/components/schemas/SalesOrder/properties/lineItems/items/properties/tracking",
                  "description": "List of record refs associated with the tracking information for the line (eg to a Tracking Category, or customer etc.)"
                }
              },
              "required": [
                "netAmount"
              ]
            }
          },
          "recordRef": {
            "type": "object",
            "description": "Links to the underlying record or data type.\n\nFound on:\n\n- Journal entries\n- Account transactions\n- Invoices\n- Transfers",
            "properties": {
              "id": {
                "type": "string",
                "description": "'id' of the underlying record or data type."
              },
              "dataType": {
                "type": "string",
                "description": "Name of the 'dataType'."
              }
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "Payment": {
        "title": "Payment",
        "description": "> **Payments or bill payments?**  \n> \n>  In Codat, payments represent accounts receivable only. For accounts payable, see [bill payments](https://docs.codat.io/docs/datamodel-accounting-billpayments). These include [bills](https://docs.codat.io/docs/datamodel-accounting-bills) and credit notes against bills.\n\n> View the coverage for payments in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=payments\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nPayments include all accounts receivable transaction data. This includes [invoices](https://docs.codat.io/docs/datamodel-accounting-invoices) and [credit notes](https://docs.codat.io/docs/datamodel-accounting-creditnotes).\n\nA payment in Codat usually represents an allocation of money within any customer accounts receivable account. This includes, but is not strictly limited to: \n\n- A payment made against an invoice, like a credit card, cheque, or cash payment.\n- An allocation of a customer's credit note, either to an invoice or maybe a refund.\n- A payment made directly to that accounts receivable account. This might be an overpayment or a prepayment. It might also be the refund of a payment made directly to an accounts receivable account.\n\nDepending on the payments allowed by the underlying accounting package, some payment types may be combined. Please see the [Example data](#section-example-data) below for more details.\n\nIn Codat, a payment contains details of:\n\n- When the payment was recorded in the accounting system.\n- How much it is for and in what currency that amount is in.\n- Who the payment was _paid by_ â€“ the _customer_.\n- The payment method used.\n- The breakdown of the types of payments â€“ the _line items_.\n\nPayments is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).\n\n## Payment types\n\n## Payment of an invoice\n\nA payment paying a single invoice has one entry in its `lines` array. This **line** has the following properties:\n\n- An _amount_ that indicates the amount of the invoice that was paid. This is always positive.\n- A **links** array containing one element with the following properties:\n  - A **type** that indicates the type of **link**, in this case an `Invoice`.\n  - An **id** that contains the ID of the invoice that was paid.\n  - An **amount** for the link. The sum of the **line.amount** and the **links.amount** must equal `0`.\n\nThe **amount** field on the **line** equals the **totalAmount** on the payment.\n\n## Payment of multiple invoices\n\nA single payment can pay multiple invoices. This can be represented in one of two formats depending on how the customer keeps their books:\n\n- The payment has multiple entries in its **lines** array, one for each invoice that is paid. Each line follows the example and rules described in [Payment of an invoice](#payment-of-an-invoice).\n- The payment has a line with multiple links to each invoice. This occurs when the proportion of the original payment allocated to each invoice is not available.\n\nEach **line** has the same properties as those described in [Payment of an invoice](#payment-of-an-invoice), with the **amount** indicating how much of the payment was allocated to the invoice. The sum of line amounts equals the **totalAmount** on the payment.\n\n## Payments and refunds on account\n\nA payment on account, that is a payment that doesnâ€™t pay a specific invoice, has one entry in its lines array. The **line** has the following properties:\n\n- A **totalAmount** that indicates the amount paid by a customer or refunded to them by a company. A payment to the customer is always negative. A refund is always positive.\n- A **links** array containing one element with the following properties:\n- A **type** that indicates the type of link. For a payment this is `PaymentOnAccount`. For a refund this is `Refund`.\n- The **id** containing the ID of the customer.\n- The **amount** for the link is `0` â€“ the **totalAmount** _or_ the amount of the payment or refund.\n\nIt is possible to have a payment that is part _on account_ and part _allocated_ to an invoice. Each line should follow the examples above.\n\n## Using a credit note to pay an invoice\n\nThe payment of an invoice using a credit note has one entry in its **lines** array. This **line** has the following properties:\n\n- An **amount** that indicates the amount of money moved, which in this case is `0`, as the credit note and invoice allocation must balance each other.\n- A **links** array containing two elements:\n  - The first **link** has:\n    - A **type** that indicates the type of **link**, in this case an `Invoice`.\n    - An **id** that contains the ID of the invoice that was paid.\n  - The second **link** has:\n    - A **type** that indicates the type of **link**, in this case a `CreditNote`.\n    - An **id** that contains the ID of the credit note used by this payment.\n\nThe **amount** field on the **line** equals the **totalAmount** on the payment.\n\n## Refunding a credit note\n\nA payment refunding a credit note has one entry in its **lines** array. This **line** has the following properties:\n\n- An **amount** that indicates the amount of the credit note that was refunded. This is always negative for a refund.\n- A **links** array that contains one element with the following properties:\n  - A **type** that indicates the type of **link**, in this case a `CreditNote`.\n  - An **id** that contains the ID of the credit note that was refunded.\n\nThe **totalAmount** field on the payment equals the **amount** field of the **line**. These are both negative, as this is money leaving accounts receivable.\n\n## Refunding a payment\n\nIf a payment is refunded, for example, if a customer overpaid an invoice and the overpayment is returned to the customer, there are two payment records: \n\n- One for the incoming over payment.\n- Another for the outgoing refund.\n\nThe payment issuing the refund has a negative **totalAmount**. This payment also has one entry in its lines array with the following properties:\n\n- An **amount** that indicates the amount that was refunded. This is always negative.\n- A **links** array that contains one element with the following properties:\n  - A **type** that indicates the type of **link**, in this case a `Payment`.\n  - An **id** that contains the ID of the payment that was refunded.\n\nThe **amount** field on the **line** equals the **totalAmount** on the payment and is negative, as this is money leaving accounts receivable.\n\nThe payment that was refunded has a line where the **amount** is positive and the type of the link is `Refund`. This payment may have several entries in its **lines** array if it was used to partly pay an invoice. \n\nFor example: A Â£1,050 payment on a Â£1,000 invoice with a refund of Â£50 has two lines: \n\n- One for Â£1,000 linked to the invoice that was paid.\n- Another for Â£50 linked to the payment that refunded the overpayment with a** type** of `Refund` and an ID that corresponds to the payment.\n\nThe **line** linked to the payment has the following properties:\n\n- An **amount** that indicates the amount that was refunded. This is positive as its money that was added to accounts receivable. It's balanced out by the negative amount of the refund.\n- A **links** array containing one element with the following properties:\n  - A **type** that indicates the type of **link**, in this case a `Refund`.\n  - An **id** that contains the ID of the payment that refunded this line.\n\n> ðŸ“˜ Support for linked payments\n> \n> Not all accounting packages support linking payments in this way. In some platforms, you may see a payment on account and a refund on account.\n\n## Foreign currencies\n\nThere are two types of currency rate that are included in the payments data type: \n\nPayment currency rate: \n\n- Base currency of the accounts receivable account.\n- Foreign currency of the payment.\n\nPayment line link currency rate: \n\n- Base currency of the item the link represents.\n- Foreign currency of the payment.\n\nThese two rates allow the calculation of currency loss or gain for any of the transactions affected by the payment lines. The second rate is used when a payment is applied to an item in a currency that doesn't match either:\n\n- The base currency for the accounts receivable account. \n- The currency of the item.\n\n```json Currency rate example\n{\n    \"id\": \"123\",\n    \"note\": \"\"\n    \"totalAmount\": 99.99,\n    \"currency\": \"GBP\",\n    \"lines\": [\n        {\n            \"amount\": 99.99,\n            \"links\": [\n                {\n                    \"type\": \"Invoice\",\n                    \"id\": \"178\",\n                    \"amount\": -50,\n                    \"currencyRate\":  1.9998,\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n## Example data\n\n> ðŸ“˜ Object properties\n> \n> For the sake of brevity, the examples here may omit properties from objects. For the full object definition, see [Payments](https://api.codat.io/swagger/index.html#/Payments).\n\n## Simple examples\n\n```json Payment for invoice\n{\n    \"totalAmount\": 1000,\n    \"lines\": [\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Allocation of credit note\n{\n    \"totalAmount\": 0,\n    \"lines\": [\n        {\n            \"amount\" : 0,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Payment of invoice and payment on account\n{\n    \"totalAmount\": 2000,\n    \"lines\": [\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"PaymentOnAccount\",\n                    \"id\" : \"y\",\n                    \"amount\" : -1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Refund of credit note\n{\n    \"totalAmount\": -1000,\n    \"lines\": [\n        {\n            \"amount\" : -1000,\n            \"links\" : [\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Refund on accounts receivable account\n{\n    \"totalAmount\": -1000,\n    \"lines\": [\n        {\n            \"amount\" : -1000,\n            \"links\" : [\n                {\n                    \"type\" : \"PaymentOnAccount\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Linked refund on accounts receivable account\n{\n    \"id\" : \"payment-001\",\n    \"totalAmount\": 1000,\n    \"lines\": [\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Refund\",\n                    \"id\" : \"refund-001\",\n                    \"amount\" : -1000\n                }\n            ]\n        }\n    ]\n}\n{\n    \"id\" : \"refund-001\",\n    \"totalAmount\": -1000,\n    \"lines\": [\n        {\n            \"amount\" : -1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Payment\",\n                    \"id\" : \"payment-001\",\n                    \"amount\" : 1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Using a credit note and cash to pay an invoice\n{\n    \"totalAmount\": 250,\n    \"lines\": [\n        {\n            \"amount\": 0,\n            \"links\": [\n                {\n                    \"type\": \"Invoice\",\n                    \"id\": \"x\",\n                    \"amount\": -750\n                }, \n                {\n                    \"type\": \"CreditNote\",\n                    \"id\": \"y\",\n                    \"amount\": 750\n                }\n            ]\n        },\n        {\n            \"amount\": 250,\n            \"links\": [\n                {\n                    \"type\": \"Invoice\",\n                    \"id\": \"x\",\n                    \"amount\": -250\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n## Complex examples\n\n```json Use two credit notes and 1000 in to \"bank\" (cash, cheque etc.) to pay invoice\n{\n    \"totalAmount\": 1000,\n    \"lines\": [\n        {\n            \"amount\" : 0,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 0,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"z\",\n                    \"amount\" : 1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Pay an invoice with two credit notes and cash, with 1000 left \"on account\"\n{\n    \"totalAmount\": 2000,\n    \"lines\": [\n        {\n            \"amount\" : 0,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 0,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"z\",\n                    \"amount\" : 1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"PaymentOnAccount\",\n                    \"id\" : \"customer-001\",\n                    \"amount\" : -1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Two credit notes pay two invoices with no allocation amount specified\n{\n    \"totalAmount\": 0,\n    \"lines\": [\n        {\n            \"amount\" : 0,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"w\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"z\",\n                    \"amount\" : 1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Two credit notes and cash pay three invoices with no allocation amount specified, and refund cash\n{\n    \"totalAmount\": 2000,\n    \"lines\": [\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"w\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"x\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"u\",\n                    \"amount\" : -1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"y\",\n                    \"amount\" : 1000\n                },\n                {\n                    \"type\" : \"CreditNote\",\n                    \"id\" : \"z\",\n                    \"amount\" : 1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Refund\",\n                    \"id\" : \"refund-001\",\n                    \"amount\" : -1000\n                }\n            ]\n        }\n    ]\n}\n{\n    \"id\" : \"refund-001\",\n    \"totalAmount\": -1000,\n    \"lines\": [\n        {\n            \"amount\" : -1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Payment\",\n                    \"id\" : \"payment-001\",\n                    \"amount\" : 1000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\nIn this example, a payment on account is used to pay the same invoice in January and again in February.\n\n```json January\n{\n    \"id\": \"001\",\n    \"totalAmount\": 5000,\n    \"date\" : \"1901-01-01\",\n    \"lines\": [\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"Invoice-x\",\n                    \"amount\" : -1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 4000,\n            \"links\" : [\n                {\n                    \"type\" : \"PaymentOnAccount\",\n                    \"id\" : \"PaymentOnAccount-y\",\n                    \"amount\" : -4000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json February\n{\n    \"id\": \"001\",\n    \"totalAmount\": 5000,\n    \"date\" : \"1901-02-01\",\n    \"lines\": [\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"Invoice-x\",\n                    \"amount\" : -1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 1000,\n            \"links\" : [\n                {\n                    \"type\" : \"Invoice\",\n                    \"id\" : \"Invoice-y\",\n                    \"amount\" : -1000\n                }\n            ]\n        },\n        {\n            \"amount\" : 3000,\n            \"links\" : [\n                {\n                    \"type\" : \"PaymentOnAccount\",\n                    \"id\" : \"PaymentOnAccount-y\",\n                    \"amount\" : -3000\n                }\n            ]\n        }\n    ]\n}\n```\n\n\n\n```json Two credit notes and some cash pay two invoices with no allocations specified\n{\n    \"totalAmount\": 500,\n    \"lines\": [\n        {\n            \"amount\": 500,\n            \"links\": [{\n                    \"type\": \"Invoice\",\n                    \"id\": \"a\",\n                    \"amount\": -1000\n                }, {\n                    \"type\": \"Invoice\",\n                    \"id\": \"b\",\n                    \"amount\": -1000\n                }, {\n                    \"type\": \"CreditNote\",\n                    \"id\": \"y\",\n                    \"amount\": 750\n                },{\n                    \"type\": \"CreditNote\",\n                    \"id\": \"z\",\n                    \"amount\": 750\n                }\n            ]\n        }\n    ]\n}\n```",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the payment, unique to the company in the accounting platform."
          },
          "customerRef": {
            "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/customerRef",
            "description": "Customer the payment is recorded against in the accounting platform."
          },
          "accountRef": {
            "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
            "description": "Account the payment is recorded against in the accounting platform."
          },
          "paymentMethodRef": {
            "description": "The Payment Method to which the payment is linked in the accounting platform.",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Amount of the payment in the payment currency. This value should never change and represents the amount of money paid into the customer's account."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "ISO currency code recorded for the payment in the accounting platform."
          },
          "currencyRate": {
            "$ref": "#/components/schemas/Invoice/properties/currencyRate"
          },
          "date": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date the payment was recorded in the accounting software."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any additional information associated with the payment."
          },
          "lines": {
            "type": "array",
            "nullable": true,
            "description": "An array of payment lines.",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "\t\nAmount in the payment currency."
                },
                "links": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "enum": [
                          "Unknown",
                          "Unlinked",
                          "Invoice",
                          "CreditNote",
                          "Other",
                          "Refund",
                          "Payment",
                          "PaymentOnAccount",
                          "ManualJournal",
                          "Discount"
                        ],
                        "type": "string",
                        "description": "Types of payment line links"
                      },
                      "id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Unique identifier of the transaction represented by the link."
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Amount by which the balance of the linked entity is altered, in the currency of the linked entity.\nA negative link amount _reduces the outstanding amount on the accounts receivable account.\nA positive link amount _increases the outstanding amount on the accounts receivable account."
                      },
                      "currencyRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Calculated as the amount of the payment allocated in the currency of the payment divided by the amount of the linked entity in the currency of the entity. When payment currencies and linked entity currencies are the same, the currencyRate is 1."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "allocatedOnDate": {
                  "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
                  "description": "The date the payment was allocated."
                }
              },
              "required": [
                "amount"
              ]
            }
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the payment."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "date"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "PaymentMethod": {
        "description": "> View the coverage for payment methods in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=paymentMethods\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA Payment Method represents the payment method(s) used to pay a Bill. Payment Methods are referenced on [Bill Payments](https://docs.codat.io/docs/datamodel-accounting-billpayments) and [Payments](https://docs.codat.io/docs/datamodel-accounting-payments).\n\nFrom the Payment Methods endpoints you can retrieve:\n\n- A list of all the Payment Methods used by a company: `GET/companies/{companyId}/data/paymentMethods`.\n- The details of an individual Payment Method:  \n  `GET /companies/{companyId}/data/paymentMethods/{paymentMethodId}`.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the payment method."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the payment method."
          },
          "type": {
            "enum": [
              "Unknown",
              "Cash",
              "Check",
              "CreditCard",
              "DebitCard",
              "BankTransfer",
              "Other"
            ],
            "type": "string",
            "description": "Method of payment."
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string",
            "description": "Status of the Payment Method."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "title": "PaymentMethod"
      },
      "ProfitAndLossReport": {
        "title": "ProfitAndLossReport",
        "type": "object",
        "additionalProperties": false,
        "description": "> **Language tip:** Profit and loss statement is also referred to as **income statement** under US GAAP (Generally Accepted Accounting Principles).\n\n> View the coverage for profit and loss in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=profitAndLoss\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nThe purpose of a profit and loss report is to present the financial performance of a company over a specified time period.\n\nA profit and loss report shows a company's total income and expenses for a specified period of time and whether a profit or loss has been made.\n\n> **Profit and loss or balance sheet?**  \n> Profit and loss reports summarise the total revenue, expenses, and profit or loss over a specified time period. A balance sheet report presents all assets, liability, and equity for a given date.\n\n\n**Structure of this report**  \nThis report will reflect the structure and line descriptions that the business has set in their own accounting platform.\n\n**History**  \nBy default, Codat pulls (up to) 24 months of profit and loss history for a company. You can adjust this to fetch more history, where available, by updating the `monthsToSync` value for `profitAndLoss` on the [data type settings endpoint](https://codat-docs.vercel.app/codat-api#/operations/post-profile-syncSettings).\n\n**Want to pull this in a standardised structure?**  \nOur [Enhanced Financials](https://docs.codat.io/docs/assess-enhanced-financials) endpoints provide the same report under standardized headings, allowing you to pull it in the same format for all of your business customers.",
        "properties": {
          "fromDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date from which the report data begins."
          },
          "toDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date on which the report data ends."
          },
          "income": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "costOfSales": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "ReportLine items for cost of sales in the given date range."
          },
          "grossProfit": {
            "type": "number",
            "format": "double",
            "description": "Gross profit of the company in the given date range."
          },
          "expenses": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "ReportLine items for expenses in the given date range."
          },
          "netOperatingProfit": {
            "type": "number",
            "format": "double",
            "description": "Net operating profit of the company in the given date range."
          },
          "otherExpenses": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "ReportLine items for other expenses in the given date range."
          },
          "otherIncome": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets",
            "description": "ReportLine items for other income in the given date range."
          },
          "netOtherIncome": {
            "type": "number",
            "format": "double",
            "description": "Net other income of the company in the given date range."
          },
          "netProfit": {
            "type": "number",
            "format": "double",
            "description": "Net profit of the company in the given date range."
          }
        },
        "required": [
          "grossProfit",
          "netOperatingProfit",
          "netOtherIncome",
          "netProfit"
        ]
      },
      "PurchaseOrder": {
        "description": "> View the coverage for purchase orders in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nPurchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.  \n\nThis information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process.",
        "title": "PurchaseOrder",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the purchase order, unique for the company in the accounting platform."
          },
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the purchase order, commonly generated by the accounting platform."
          },
          "issueDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the purchase order as recorded in the accounting platform."
          },
          "paymentDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date the supplier is due to be paid."
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Expected delivery date for any goods that have been ordered."
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Actual delivery date for any goods that have been ordered."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any additional information associated with the purchase order."
          },
          "shipTo": {
            "$ref": "#/components/schemas/SalesOrder/properties/shipTo",
            "description": "Delivery details for any goods that have been ordered."
          },
          "supplierRef": {
            "$ref": "#/components/schemas/Bill/properties/supplierRef",
            "description": "Supplier that the purchase order is recorded against in the accounting system."
          },
          "status": {
            "enum": [
              "Unknown",
              "Draft",
              "Open",
              "Closed",
              "Void"
            ],
            "type": "string",
            "description": "Current state of the purchase order"
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the purchase order."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Rate for converting the total amount of the purchase order into the base currency for the company."
          },
          "lineItems": {
            "type": "array",
            "nullable": true,
            "description": "Array of line items.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Description of the goods / services that have been ordered."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the product or inventory item to which the line item is linked."
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "nullable": true,
                  "description": "Reference to the tracking categories to which the line item is linked.",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  }
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Price of each unit."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units that have been ordered."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Value of any discounts applied."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "description": "Percentage rate (from 0 to 100) of any discounts applied to the unit amount."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of the line, inclusive of discounts but exclusive of tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of tax for the line."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Total amount of the line, inclusive of discounts and tax."
                }
              }
            }
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "description": "Total value of any discounts applied to the purchase order."
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the purchase order, including discounts but excluding tax."
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "\t\nTotal amount of tax included in the purchase order."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the purchase order, including discounts and tax."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "SalesOrder": {
        "description": "> View the coverage for sales orders in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=salesOrders\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA sales order represents a customer's intention to purchase goods or services from a seller and usually includes information such as the expected delivery date and shipping details. This information can be used to provide visibility on a business's expected receivables and to track sales through the full procurement process.\n\nA sales order is typically converted to an [invoice](https://docs.codat.io/docs/datamodel-accounting-invoices) after approval.",
        "title": "SalesOrder",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the sales order, unique for the company in the accounting platform."
          },
          "salesOrderNumber": {
            "type": "string",
            "nullable": true,
            "description": "Friendly reference for the sales order, commonly generated by the accounting platform."
          },
          "customerPurchaseOrderNumber": {
            "type": "string",
            "nullable": true,
            "description": "A customer-supplied identifier for the purchase order in the customer's system."
          },
          "issueDate": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Date of the sales order as recorded in the accounting platform."
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Expected delivery date for any goods that have been ordered."
          },
          "note": {
            "type": "string",
            "nullable": true,
            "description": "Any additional information associated with the sales order."
          },
          "shipTo": {
            "description": "Delivery details for any goods that have been ordered.",
            "type": "object",
            "properties": {
              "contact": {
                "type": "object",
                "description": "Details of the named contact at the delivery address.",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the contact at the delivery address."
                  },
                  "email": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email address of the contact at the delivery address."
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "description": "Phone number of the contact at the delivery address."
                  }
                }
              },
              "address": {
                "$ref": "#/components/schemas/Customer/properties/addresses/items",
                "description": "Delivery address for any goods that have been ordered."
              }
            },
            "title": "ShipTo"
          },
          "customerRef": {
            "$ref": "#/components/schemas/CreditNote/properties/lineItems/items/properties/tracking/properties/customerRef",
            "description": "The customer that the sales order is recorded against in the accounting system."
          },
          "status": {
            "enum": [
              "Unknown",
              "Draft",
              "Open",
              "Closed",
              "Void"
            ],
            "type": "string",
            "description": "Current state of the sales order."
          },
          "invoicingStatus": {
            "enum": [
              "Unknown",
              "PartiallyInvoiced",
              "Invoiced",
              "NotInvoiced"
            ],
            "type": "string",
            "description": "If the sales order is converted to an invoice, or will be in future, the invoicingStatus field indicates the current stage of the invoicing process."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the sales order."
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "description": "Rate for converting the total amount of the sales order into the base currency for the company."
          },
          "lineItems": {
            "type": "array",
            "nullable": true,
            "description": "An array of line items.",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true,
                  "description": "Description of the goods or services that have been ordered."
                },
                "accountRef": {
                  "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                  "description": "Reference to the account to which the line item is linked."
                },
                "itemRef": {
                  "$ref": "#/components/schemas/Bill/properties/lineItems/items/properties/itemRef",
                  "description": "Reference to the product or inventory item to which the line item is linked."
                },
                "tracking": {
                  "type": "object",
                  "properties": {
                    "recordRefs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true
                    }
                  }
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Price of each unit."
                },
                "quantity": {
                  "type": "number",
                  "format": "double",
                  "description": "Number of units that have been ordered."
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Value of any discounts applied."
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "description": "Percentage rate (from 0 to 100) of any discounts applied to the unit amount."
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of the line, inclusive of discounts but exclusive of tax."
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of tax for the line."
                },
                "taxRateRef": {
                  "$ref": "#/components/schemas/Item/properties/billItem/properties/taxRateRef",
                  "description": "Reference to the tax rate to which the line item is linked."
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "description": "Total amount of the line, inclusive of discounts and tax."
                }
              }
            }
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "description": "\t\nTotal value of any discounts applied to the sales order."
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the sales order, including discounts but excluding tax."
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of tax included in the sales order."
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the sales order, including discounts and tax."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "Supplier": {
        "description": "> View the coverage for suppliers in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nFrom the **Suppliers** endpoints, you can retrieve a list of [all the suppliers for a company](https://api.codat.io/swagger/index.html#/Suppliers/get_companies__companyId__data_suppliers). Suppliers' data links to accounts payable [bills](https://docs.codat.io/docs/datamodel-accounting-bills).",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the supplier, unique to the company in the accounting platform."
          },
          "supplierName": {
            "type": "string",
            "nullable": true,
            "description": "\t\nName of the supplier as recorded in the accounting system, typically the company name."
          },
          "contactName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the main contact for the supplier."
          },
          "emailAddress": {
            "type": "string",
            "nullable": true,
            "description": "Email address that the supplier may be contacted on."
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "Phone number that the supplier may be contacted on."
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "description": "An array of Addresses.",
            "items": {
              "$ref": "#/components/schemas/Customer/properties/addresses/items"
            }
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true,
            "description": "Company number of the supplier. In the UK, this is typically the company registration number issued by Companies House."
          },
          "taxNumber": {
            "type": "string",
            "nullable": true,
            "description": "Supplier's company tax number."
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string",
            "description": "Status of the supplier."
          },
          "defaultCurrency": {
            "type": "string",
            "nullable": true,
            "description": "Default currency the supplier's transactional data is recorded in."
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "required": [
          "status"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "TaxRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "effectiveTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "required": [
                "isCompound"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "rate": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "isCompound": {
                  "type": "boolean"
                }
              }
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validDatatypeLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account/properties/validDatatypeLinks/items"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "description": "> View the coverage for tax rates in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=taxRates\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAccounting systems typically store a set of taxes and associated rates within the accounting package. This means that users don't have to look up or remember the rates for each type of tax. For example: Applying the tax \"UK sales VAT\" to line items of an invoice adds the correct rate of 20%. \n\n### Tax components\n\nIn some cases, a tax is made up of multiple sub taxes, often called _components_ of the tax.  For example: You may have an item that is charged a tax rate called \"City import tax (8%)\" that has two components: \n\n- A city tax of 5%. \n- An import tax of 3%.\n\n> **Effective tax rates**  \n> Where there are multiple components of a tax, each component may be calculated on the original amount and added together. Alternatively, one tax may be calculated on the sub-total of the original amount plus another tax, which is referred to as _compounding_. When there is compounding, the effective tax rate is the rate that, if applied to the original amount, would result in the total amount of tax with compounding.  \n>\n> **Example:**  \n> A tax has two components. Both components have a rate of 10%, and one component is compound. In this case, there is a total tax rate of 20% but an effective tax rate of 21%. [Also see _Compound tax example_](#section-compound-tax-example).\n> - For QuickBooks Online, Codat doesn't use compound rates. Instead, the calculated effective tax rate for each component is shown. This means that the effective and total rates are the same because the total tax rate is a sum of the component rates."
      },
      "TrackingCategory": {
        "description": "Details of a category used for tracking transactions.\n\n:::note Language tip\n\nParameters used to track types of spend in various parts of an organization can be called  **dimensions**, **projects**, **classes**, or **locations** in different accounting platforms. In Codat, we refer to these as tracking categories.\n:::\n\nExplore the <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/TrackingCategories\" target=\"_blank\">Tracking Categories</a> endpoints in Swagger.\n\nView the coverage for tracking categories in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=trackingCategories\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nTracking categories are used to monitor cost centres and control budgets that sit outside the standard chart of accounts. Customers may use tracking categories to group together and track the income and costs of specific departments, projects, locations or customers.\n\nFrom their accounting system, customers can: \n\n- Create and maintain tracking categories and tracking category types.\n- View all tracking categories that are available for use.\n- View the relationships between the categories.\n- Assign invoices, bills, credit notes, or bill credit notes to one or more categories.\n- View the categories that a transaction belongs to.\n- View all transactions in a tracking category.\n\nFrom the [TrackingCategories](https://api.codat.io/swagger/index.html#/TrackingCategories) endpoints, you can retrieve: \n\n- A [list of the latest tracking categories](https://api.codat.io/swagger/index.html#/TrackingCategories/TrackingCategories_ListPaged) for a company.\n- The details of a [specific tracking category](https://api.codat.io/swagger/index.html#/TrackingCategories/TrackingCategories_Single).",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier for the item, unique per tracking category",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tracking category",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TrackingCategoryTree/properties/status",
            "description": "Current state of the tracking category."
          },
          "parentId": {
            "type": "string",
            "description": "The identifier for this item's immediate parent",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "description": "Boolean value indicating whether this category has SubCategories"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "title": "TrackingCategory"
      },
      "TrackingCategoryTree": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier for the item, unique per tracking category",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tracking category",
            "nullable": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string",
            "title": "TrackingCategoryStatus",
            "description": "Current state of the tracking category."
          },
          "parentId": {
            "type": "string",
            "description": "The identifier for this item's immediate parent",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "description": "Boolean value indicating whether this category has SubCategories"
          },
          "subCategories": {
            "type": "array",
            "nullable": true,
            "description": "A collection of subcategories that are nested beneath this category.",
            "items": {
              "$ref": "#/components/schemas/TrackingCategoryTree"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ],
        "title": "TrackingCategoryTree",
        "description": ""
      },
      "Transfer": {
        "description": "> View the coverage for transfers in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=transfers\" target=\"_blank\">Data coverage explorer</a>.\n\nFrom the **Transfers** endpoints, you can:\n\n- [Retrieve a list of all transfers for a specified company](https://api.codat.io/swagger/index.html#/Transfers/get_companies__companyId__connections__connectionId__data_transfers)\n- [Retrieve a single transfer for a specified company](https://api.codat.io/swagger/index.html#/Transfers/get_companies__companyId__connections__connectionId__data_transfers__transferId_) \n- [Add a new transfer for a specified company](https://api.codat.io/swagger/index.html#/Transfers/post_companies__companyId__connections__connectionId__push_transfers) \n\n**Transfers** is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the transfer."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the transfer."
          },
          "contactRef": {
            "description": "The customer or supplier for the transfer, if available.",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "dataType": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "date": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "The day on which the transfer was made."
          },
          "from": {
            "$ref": "#/components/schemas/Transfer/properties/to",
            "description": "The details of the accounts the transfer is moving from."
          },
          "to": {
            "description": "The details of the accounts the transfer is moving to.",
            "type": "object",
            "properties": {
              "accountRef": {
                "$ref": "#/components/schemas/JournalEntry/properties/journalLines/items/properties/accountRef",
                "description": "The account that the transfer is moving from or to."
              },
              "currency": {
                "type": "string",
                "nullable": true,
                "description": "ISO currency code recorded for the transfer in the accounting platform."
              },
              "amount": {
                "type": "number",
                "format": "double",
                "description": "The amount transferred between accounts."
              }
            },
            "title": "TransferAccount"
          },
          "trackingCategoryRefs": {
            "type": "array",
            "nullable": true,
            "description": "Reference to the tracking categories this transfer is being tracked against.",
            "items": {
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "minLength": 1,
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "depositedRecordRefs": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Bill/allOf/0"
          }
        ]
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "includeWhenSent": {
            "type": "boolean"
          }
        },
        "title": "Attachment"
      },
      "AttachmentsDataset": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "nullable": true
          }
        },
        "title": "Attachments"
      },
      "DataSet": {
        "required": [
          "companyId",
          "connectionId",
          "id",
          "isCompleted",
          "isErrored",
          "progress",
          "requested",
          "status"
        ],
        "type": "object",
        "properties": {
          "datasetLogsUrl": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "connectionId": {
            "type": "string",
            "format": "uuid"
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "Initial",
              "Queued",
              "Fetching",
              "MapQueued",
              "Mapping",
              "Complete",
              "FetchError",
              "MapError",
              "InternalError",
              "ProcessingQueued",
              "Processing",
              "ProcessingError",
              "ValidationQueued",
              "Validating",
              "ValidationError",
              "AuthError",
              "Cancelled",
              "NotSupported",
              "RateLimitError",
              "PermissionsError",
              "PrerequisiteNotMet"
            ],
            "type": "string"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "requested": {
            "type": "string",
            "format": "date-time"
          },
          "completed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "isErrored": {
            "type": "boolean"
          },
          "validationinformationUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "title": ""
      },
      "CashFlowStatementResponse": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashFlowStatement"
            }
          },
          "reportBasis": {
            "enum": [
              "Unknown",
              "Accrual",
              "Cash"
            ],
            "type": "string",
            "description": "Accounting method used when aggregating the report data. In this case, Cash."
          },
          "reportInput": {
            "enum": [
              "Unknown",
              "Indirect",
              "Direct"
            ],
            "type": "string",
            "description": "Accounting method used to prepare the cash flow statement."
          },
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of all values in the cash flow statement."
          },
          "mostRecentAvailableMonth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "earliestAvailableMonth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "reports",
          "reportBasis",
          "reportInput",
          "currency"
        ]
      },
      "BalanceSheetResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Account/properties/currency",
            "description": "Currency of the balance sheet."
          },
          "reports": {
            "type": "array",
            "description": "An array of BalanceSheet reports.",
            "items": {
              "$ref": "#/components/schemas/BalanceSheet"
            }
          },
          "mostRecentAvailableMonth": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Most recent available monthly report data."
          },
          "earliestAvailableMonth": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Earliest available monthly report data."
          }
        },
        "required": [
          "currency",
          "reports"
        ]
      },
      "ProfitAndLossResponse": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "description": "An array of ProfitAndLossReports.",
            "items": {
              "$ref": "#/components/schemas/ProfitAndLossReport"
            }
          },
          "reportBasis": {
            "enum": [
              "Unknown",
              "Accrual",
              "Cash"
            ],
            "type": "string",
            "description": "The basis of a report."
          },
          "currency": {
            "minLength": 1,
            "type": "string",
            "description": "Base currency of the company in which the profit and loss report is presented."
          },
          "mostRecentAvailableMonth": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Most recent available monthly report data."
          },
          "earliestAvailableMonth": {
            "$ref": "#/components/schemas/Customer/properties/contacts/items/properties/modifiedDate",
            "description": "Earliest available monthly report data."
          }
        },
        "required": [
          "reports",
          "reportBasis",
          "currency"
        ]
      }
    },
    "parameters": {
      "accountId": {
        "name": "accountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for an account"
      },
      "bankAccountId": {
        "name": "bankAccountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a bank account"
      },
      "timeoutInMinutes": {
        "name": "timeoutInMinutes",
        "in": "query",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "forceUpdate": {
        "name": "forceUpdate",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "invoiceId": {
        "name": "invoiceId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for an invoice"
      },
      "attachmentId": {
        "name": "attachmentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for an attachment"
      },
      "supplierId": {
        "name": "supplierId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a supplier"
      },
      "allowSyncOnPushComplete": {
        "name": "allowSyncOnPushComplete",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "billId": {
        "name": "billId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a bill"
      },
      "directCostId": {
        "name": "directCostId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a direct cost"
      },
      "directIncomeId": {
        "name": "directIncomeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a direct income"
      }
    },
    "securitySchemes": {
      "API_Key": {
        "type": "apiKey",
        "description": "The word \"Basic\" followed by a space and your API Key, base64 encoded, which can be found [here](https://app.codat.io/#/profile)",
        "name": "Your Base 64 encoded API Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "API_Key": []
    }
  ]
}